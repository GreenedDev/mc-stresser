<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="13001026771"><g><title>[ld-linux-x86-64.so.2] (2,997,885 samples, 0.02%)</title><rect x="0.0004%" y="597" width="0.0231%" height="15" fill="rgb(227,0,7)" fg:x="53949" fg:w="2997885"/><text x="0.2504%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,997,885 samples, 0.02%)</title><rect x="0.0004%" y="581" width="0.0231%" height="15" fill="rgb(217,0,24)" fg:x="53949" fg:w="2997885"/><text x="0.2504%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,551,876 samples, 0.02%)</title><rect x="0.0038%" y="565" width="0.0196%" height="15" fill="rgb(221,193,54)" fg:x="499958" fg:w="2551876"/><text x="0.2538%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,551,876 samples, 0.02%)</title><rect x="0.0038%" y="549" width="0.0196%" height="15" fill="rgb(248,212,6)" fg:x="499958" fg:w="2551876"/><text x="0.2538%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,551,876 samples, 0.02%)</title><rect x="0.0038%" y="533" width="0.0196%" height="15" fill="rgb(208,68,35)" fg:x="499958" fg:w="2551876"/><text x="0.2538%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,551,876 samples, 0.02%)</title><rect x="0.0038%" y="517" width="0.0196%" height="15" fill="rgb(232,128,0)" fg:x="499958" fg:w="2551876"/><text x="0.2538%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,551,876 samples, 0.02%)</title><rect x="0.0038%" y="501" width="0.0196%" height="15" fill="rgb(207,160,47)" fg:x="499958" fg:w="2551876"/><text x="0.2538%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,048,458 samples, 0.02%)</title><rect x="0.0000%" y="613" width="0.0234%" height="15" fill="rgb(228,23,34)" fg:x="6497" fg:w="3048458"/><text x="0.2500%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,048,459 samples, 0.02%)</title><rect x="0.0000%" y="629" width="0.0234%" height="15" fill="rgb(218,30,26)" fg:x="6497" fg:w="3048459"/><text x="0.2500%" y="639.50"></text></g><g><title>[unknown] (10,018,514 samples, 0.08%)</title><rect x="0.0277%" y="629" width="0.0771%" height="15" fill="rgb(220,122,19)" fg:x="3599083" fg:w="10018514"/><text x="0.2777%" y="639.50"></text></g><g><title>syscall (2,151,764 samples, 0.02%)</title><rect x="0.0882%" y="613" width="0.0166%" height="15" fill="rgb(250,228,42)" fg:x="11465833" fg:w="2151764"/><text x="0.3382%" y="623.50"></text></g><g><title>[unknown] (2,151,764 samples, 0.02%)</title><rect x="0.0882%" y="597" width="0.0166%" height="15" fill="rgb(240,193,28)" fg:x="11465833" fg:w="2151764"/><text x="0.3382%" y="607.50"></text></g><g><title>tokio::runtime::park::clone (12,786,365 samples, 0.10%)</title><rect x="1.1306%" y="437" width="0.0983%" height="15" fill="rgb(216,20,37)" fg:x="146984188" fg:w="12786365"/><text x="1.3806%" y="447.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (61,647,873 samples, 0.47%)</title><rect x="0.7668%" y="453" width="0.4742%" height="15" fill="rgb(206,188,39)" fg:x="99693170" fg:w="61647873"/><text x="1.0168%" y="463.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (1,570,490 samples, 0.01%)</title><rect x="1.2289%" y="437" width="0.0121%" height="15" fill="rgb(217,207,13)" fg:x="159770553" fg:w="1570490"/><text x="1.4789%" y="447.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (4,310,568 samples, 0.03%)</title><rect x="1.2410%" y="453" width="0.0332%" height="15" fill="rgb(231,73,38)" fg:x="161341043" fg:w="4310568"/><text x="1.4910%" y="463.50"></text></g><g><title>&lt;tokio::task::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (3,639,253 samples, 0.03%)</title><rect x="1.2741%" y="453" width="0.0280%" height="15" fill="rgb(225,20,46)" fg:x="165651611" fg:w="3639253"/><text x="1.5241%" y="463.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park (10,055,258 samples, 0.08%)</title><rect x="1.3021%" y="453" width="0.0773%" height="15" fill="rgb(210,31,41)" fg:x="169290864" fg:w="10055258"/><text x="1.5521%" y="463.50"></text></g><g><title>tokio::runtime::park::Inner::park (398,085,541 samples, 3.06%)</title><rect x="1.3795%" y="453" width="3.0620%" height="15" fill="rgb(221,200,47)" fg:x="179346122" fg:w="398085541"/><text x="1.6295%" y="463.50">tok..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (384,729,050 samples, 2.96%)</title><rect x="1.4822%" y="437" width="2.9592%" height="15" fill="rgb(226,26,5)" fg:x="192702613" fg:w="384729050"/><text x="1.7322%" y="447.50">par..</text></g><g><title>syscall (323,535,479 samples, 2.49%)</title><rect x="1.9529%" y="421" width="2.4885%" height="15" fill="rgb(249,33,26)" fg:x="253896184" fg:w="323535479"/><text x="2.2029%" y="431.50">sy..</text></g><g><title>[unknown] (321,785,495 samples, 2.48%)</title><rect x="1.9664%" y="405" width="2.4751%" height="15" fill="rgb(235,183,28)" fg:x="255646168" fg:w="321785495"/><text x="2.2164%" y="415.50">[u..</text></g><g><title>[unknown] (275,666,944 samples, 2.12%)</title><rect x="2.3211%" y="389" width="2.1203%" height="15" fill="rgb(221,5,38)" fg:x="301764719" fg:w="275666944"/><text x="2.5711%" y="399.50">[..</text></g><g><title>[unknown] (265,009,570 samples, 2.04%)</title><rect x="2.4031%" y="373" width="2.0384%" height="15" fill="rgb(247,18,42)" fg:x="312422093" fg:w="265009570"/><text x="2.6531%" y="383.50">[..</text></g><g><title>[unknown] (254,152,383 samples, 1.95%)</title><rect x="2.4866%" y="357" width="1.9549%" height="15" fill="rgb(241,131,45)" fg:x="323279280" fg:w="254152383"/><text x="2.7366%" y="367.50">[..</text></g><g><title>[unknown] (238,251,029 samples, 1.83%)</title><rect x="2.6089%" y="341" width="1.8326%" height="15" fill="rgb(249,31,29)" fg:x="339180634" fg:w="238251029"/><text x="2.8589%" y="351.50">[..</text></g><g><title>[unknown] (229,841,811 samples, 1.77%)</title><rect x="2.6736%" y="325" width="1.7679%" height="15" fill="rgb(225,111,53)" fg:x="347589852" fg:w="229841811"/><text x="2.9236%" y="335.50"></text></g><g><title>[unknown] (196,424,762 samples, 1.51%)</title><rect x="2.9306%" y="309" width="1.5108%" height="15" fill="rgb(238,160,17)" fg:x="381006901" fg:w="196424762"/><text x="3.1806%" y="319.50"></text></g><g><title>[unknown] (170,483,727 samples, 1.31%)</title><rect x="3.1301%" y="293" width="1.3113%" height="15" fill="rgb(214,148,48)" fg:x="406947936" fg:w="170483727"/><text x="3.3801%" y="303.50"></text></g><g><title>[unknown] (121,044,647 samples, 0.93%)</title><rect x="3.5104%" y="277" width="0.9310%" height="15" fill="rgb(232,36,49)" fg:x="456387016" fg:w="121044647"/><text x="3.7604%" y="287.50"></text></g><g><title>[unknown] (20,034,171 samples, 0.15%)</title><rect x="4.2873%" y="261" width="0.1541%" height="15" fill="rgb(209,103,24)" fg:x="557397492" fg:w="20034171"/><text x="4.5373%" y="271.50"></text></g><g><title>[unknown] (12,566,491 samples, 0.10%)</title><rect x="4.3448%" y="245" width="0.0967%" height="15" fill="rgb(229,88,8)" fg:x="564865172" fg:w="12566491"/><text x="4.5948%" y="255.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (16,518,255 samples, 0.13%)</title><rect x="4.4414%" y="453" width="0.1271%" height="15" fill="rgb(213,181,19)" fg:x="577431663" fg:w="16518255"/><text x="4.6914%" y="463.50"></text></g><g><title>[libc.so.6] (194,135,945 samples, 1.49%)</title><rect x="4.6707%" y="437" width="1.4932%" height="15" fill="rgb(254,191,54)" fg:x="607233474" fg:w="194135945"/><text x="4.9207%" y="447.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="389" width="0.0105%" height="15" fill="rgb(241,83,37)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="373" width="0.0105%" height="15" fill="rgb(233,36,39)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="383.50"></text></g><g><title>clock_gettime (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="357" width="0.0105%" height="15" fill="rgb(226,3,54)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="367.50"></text></g><g><title>[[vdso]] (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="341" width="0.0105%" height="15" fill="rgb(245,192,40)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="351.50"></text></g><g><title>[unknown] (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="325" width="0.0105%" height="15" fill="rgb(238,167,29)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="335.50"></text></g><g><title>[unknown] (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="309" width="0.0105%" height="15" fill="rgb(232,182,51)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="319.50"></text></g><g><title>[unknown] (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="293" width="0.0105%" height="15" fill="rgb(231,60,39)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="303.50"></text></g><g><title>[unknown] (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="277" width="0.0105%" height="15" fill="rgb(208,69,12)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="287.50"></text></g><g><title>[unknown] (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="261" width="0.0105%" height="15" fill="rgb(235,93,37)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="271.50"></text></g><g><title>[unknown] (1,360,327 samples, 0.01%)</title><rect x="6.7698%" y="245" width="0.0105%" height="15" fill="rgb(213,116,39)" fg:x="880144880" fg:w="1360327"/><text x="7.0198%" y="255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (80,504,913 samples, 0.62%)</title><rect x="6.7803%" y="389" width="0.6192%" height="15" fill="rgb(222,207,29)" fg:x="881505207" fg:w="80504913"/><text x="7.0303%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (176,068,679 samples, 1.35%)</title><rect x="6.5110%" y="421" width="1.3543%" height="15" fill="rgb(206,96,30)" fg:x="846493956" fg:w="176068679"/><text x="6.7610%" y="431.50"></text></g><g><title>tokio::runtime::context::with_scheduler (167,651,536 samples, 1.29%)</title><rect x="6.5757%" y="405" width="1.2895%" height="15" fill="rgb(218,138,4)" fg:x="854911099" fg:w="167651536"/><text x="6.8257%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (60,552,515 samples, 0.47%)</title><rect x="7.3995%" y="389" width="0.4658%" height="15" fill="rgb(250,191,14)" fg:x="962010120" fg:w="60552515"/><text x="7.6495%" y="399.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (3,519,743 samples, 0.03%)</title><rect x="7.8382%" y="373" width="0.0271%" height="15" fill="rgb(239,60,40)" fg:x="1019042892" fg:w="3519743"/><text x="8.0882%" y="383.50"></text></g><g><title>__sched_yield (1,367,941 samples, 0.01%)</title><rect x="7.8547%" y="357" width="0.0105%" height="15" fill="rgb(206,27,48)" fg:x="1021194694" fg:w="1367941"/><text x="8.1047%" y="367.50"></text></g><g><title>[libc.so.6] (178,324,117 samples, 1.37%)</title><rect x="8.1075%" y="405" width="1.3716%" height="15" fill="rgb(225,35,8)" fg:x="1054058396" fg:w="178324117"/><text x="8.3575%" y="415.50"></text></g><g><title>[libc.so.6] (208,215,107 samples, 1.60%)</title><rect x="12.8556%" y="341" width="1.6015%" height="15" fill="rgb(250,213,24)" fg:x="1671362641" fg:w="208215107"/><text x="13.1056%" y="351.50"></text></g><g><title>[libc.so.6] (40,638,450 samples, 0.31%)</title><rect x="14.1446%" y="325" width="0.3126%" height="15" fill="rgb(247,123,22)" fg:x="1838939298" fg:w="40638450"/><text x="14.3946%" y="335.50"></text></g><g><title>[libc.so.6] (524,887,103 samples, 4.04%)</title><rect x="10.4266%" y="373" width="4.0373%" height="15" fill="rgb(231,138,38)" fg:x="1355569719" fg:w="524887103"/><text x="10.6766%" y="383.50">[lib..</text></g><g><title>[libc.so.6] (495,204,389 samples, 3.81%)</title><rect x="10.6549%" y="357" width="3.8090%" height="15" fill="rgb(231,145,46)" fg:x="1385252433" fg:w="495204389"/><text x="10.9049%" y="367.50">[lib..</text></g><g><title>__lll_lock_wait_private (8,467,419 samples, 0.07%)</title><rect x="14.4639%" y="373" width="0.0651%" height="15" fill="rgb(251,118,11)" fg:x="1880456822" fg:w="8467419"/><text x="14.7139%" y="383.50"></text></g><g><title>[unknown] (8,467,419 samples, 0.07%)</title><rect x="14.4639%" y="357" width="0.0651%" height="15" fill="rgb(217,147,25)" fg:x="1880456822" fg:w="8467419"/><text x="14.7139%" y="367.50"></text></g><g><title>[unknown] (6,847,119 samples, 0.05%)</title><rect x="14.4764%" y="341" width="0.0527%" height="15" fill="rgb(247,81,37)" fg:x="1882077122" fg:w="6847119"/><text x="14.7264%" y="351.50"></text></g><g><title>[unknown] (6,847,119 samples, 0.05%)</title><rect x="14.4764%" y="325" width="0.0527%" height="15" fill="rgb(209,12,38)" fg:x="1882077122" fg:w="6847119"/><text x="14.7264%" y="335.50"></text></g><g><title>[unknown] (6,847,119 samples, 0.05%)</title><rect x="14.4764%" y="309" width="0.0527%" height="15" fill="rgb(227,1,9)" fg:x="1882077122" fg:w="6847119"/><text x="14.7264%" y="319.50"></text></g><g><title>[unknown] (6,145,532 samples, 0.05%)</title><rect x="14.4818%" y="293" width="0.0473%" height="15" fill="rgb(248,47,43)" fg:x="1882778709" fg:w="6145532"/><text x="14.7318%" y="303.50"></text></g><g><title>[unknown] (5,393,411 samples, 0.04%)</title><rect x="14.4876%" y="277" width="0.0415%" height="15" fill="rgb(221,10,30)" fg:x="1883530830" fg:w="5393411"/><text x="14.7376%" y="287.50"></text></g><g><title>[unknown] (3,449,494 samples, 0.03%)</title><rect x="14.5025%" y="261" width="0.0265%" height="15" fill="rgb(210,229,1)" fg:x="1885474747" fg:w="3449494"/><text x="14.7525%" y="271.50"></text></g><g><title>[unknown] (3,449,494 samples, 0.03%)</title><rect x="14.5025%" y="245" width="0.0265%" height="15" fill="rgb(222,148,37)" fg:x="1885474747" fg:w="3449494"/><text x="14.7525%" y="255.50"></text></g><g><title>[unknown] (2,737,392 samples, 0.02%)</title><rect x="14.5080%" y="229" width="0.0211%" height="15" fill="rgb(234,67,33)" fg:x="1886186849" fg:w="2737392"/><text x="14.7580%" y="239.50"></text></g><g><title>__rustc::__rdl_alloc (681,219,328 samples, 5.24%)</title><rect x="9.4829%" y="405" width="5.2397%" height="15" fill="rgb(247,98,35)" fg:x="1232879391" fg:w="681219328"/><text x="9.7329%" y="415.50">__rust..</text></g><g><title>posix_memalign (675,685,682 samples, 5.20%)</title><rect x="9.5255%" y="389" width="5.1972%" height="15" fill="rgb(247,138,52)" fg:x="1238413037" fg:w="675685682"/><text x="9.7755%" y="399.50">posix_..</text></g><g><title>__lll_lock_wake_private (25,174,478 samples, 0.19%)</title><rect x="14.5290%" y="373" width="0.1936%" height="15" fill="rgb(213,79,30)" fg:x="1888924241" fg:w="25174478"/><text x="14.7790%" y="383.50"></text></g><g><title>[unknown] (22,966,221 samples, 0.18%)</title><rect x="14.5460%" y="357" width="0.1766%" height="15" fill="rgb(246,177,23)" fg:x="1891132498" fg:w="22966221"/><text x="14.7960%" y="367.50"></text></g><g><title>[unknown] (17,774,215 samples, 0.14%)</title><rect x="14.5860%" y="341" width="0.1367%" height="15" fill="rgb(230,62,27)" fg:x="1896324504" fg:w="17774215"/><text x="14.8360%" y="351.50"></text></g><g><title>[unknown] (17,774,215 samples, 0.14%)</title><rect x="14.5860%" y="325" width="0.1367%" height="15" fill="rgb(216,154,8)" fg:x="1896324504" fg:w="17774215"/><text x="14.8360%" y="335.50"></text></g><g><title>[unknown] (16,780,315 samples, 0.13%)</title><rect x="14.5936%" y="309" width="0.1291%" height="15" fill="rgb(244,35,45)" fg:x="1897318404" fg:w="16780315"/><text x="14.8436%" y="319.50"></text></g><g><title>[unknown] (15,086,967 samples, 0.12%)</title><rect x="14.6066%" y="293" width="0.1160%" height="15" fill="rgb(251,115,12)" fg:x="1899011752" fg:w="15086967"/><text x="14.8566%" y="303.50"></text></g><g><title>[unknown] (12,873,648 samples, 0.10%)</title><rect x="14.6237%" y="277" width="0.0990%" height="15" fill="rgb(240,54,50)" fg:x="1901225071" fg:w="12873648"/><text x="14.8737%" y="287.50"></text></g><g><title>[unknown] (3,984,948 samples, 0.03%)</title><rect x="14.6920%" y="261" width="0.0307%" height="15" fill="rgb(233,84,52)" fg:x="1910113771" fg:w="3984948"/><text x="14.9420%" y="271.50"></text></g><g><title>__rustc::__rust_alloc (1,731,616 samples, 0.01%)</title><rect x="14.7227%" y="405" width="0.0133%" height="15" fill="rgb(207,117,47)" fg:x="1914098719" fg:w="1731616"/><text x="14.9727%" y="415.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (907,722,570 samples, 6.98%)</title><rect x="7.8652%" y="421" width="6.9819%" height="15" fill="rgb(249,43,39)" fg:x="1022562635" fg:w="907722570"/><text x="8.1152%" y="431.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::hooks (14,454,870 samples, 0.11%)</title><rect x="14.7360%" y="405" width="0.1112%" height="15" fill="rgb(209,38,44)" fg:x="1915830335" fg:w="14454870"/><text x="14.9860%" y="415.50"></text></g><g><title>tokio::util::metric_atomics::MetricAtomicU64::add (18,137,857 samples, 0.14%)</title><rect x="16.4025%" y="389" width="0.1395%" height="15" fill="rgb(236,212,23)" fg:x="2132498089" fg:w="18137857"/><text x="16.6525%" y="399.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (249,838,078 samples, 1.92%)</title><rect x="14.8472%" y="421" width="1.9217%" height="15" fill="rgb(242,79,21)" fg:x="1930285205" fg:w="249838078"/><text x="15.0972%" y="431.50">t..</text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (177,899,978 samples, 1.37%)</title><rect x="15.4005%" y="405" width="1.3684%" height="15" fill="rgb(211,96,35)" fg:x="2002223305" fg:w="177899978"/><text x="15.6505%" y="415.50"></text></g><g><title>tokio::util::metric_atomics::MetricAtomicUsize::increment (29,487,337 samples, 0.23%)</title><rect x="16.5420%" y="389" width="0.2268%" height="15" fill="rgb(253,215,40)" fg:x="2150635946" fg:w="29487337"/><text x="16.7920%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (1,386,771,369 samples, 10.67%)</title><rect x="6.1639%" y="437" width="10.6666%" height="15" fill="rgb(211,81,21)" fg:x="801369419" fg:w="1386771369"/><text x="6.4139%" y="447.50">tokio::runtime::..</text></g><g><title>tokio::runtime::task_hooks::TaskHooks::spawn (8,017,505 samples, 0.06%)</title><rect x="16.7689%" y="421" width="0.0617%" height="15" fill="rgb(208,190,38)" fg:x="2180123283" fg:w="8017505"/><text x="17.0189%" y="431.50"></text></g><g><title>stress-test (2,207,553,509 samples, 16.98%)</title><rect x="0.0000%" y="645" width="16.9798%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="2207553509"/><text x="0.2500%" y="655.50">stress-test</text></g><g><title>_start (2,192,695,864 samples, 16.87%)</title><rect x="0.1143%" y="629" width="16.8656%" height="15" fill="rgb(237,122,38)" fg:x="14857645" fg:w="2192695864"/><text x="0.3643%" y="639.50">_start</text></g><g><title>__libc_start_main (2,192,695,864 samples, 16.87%)</title><rect x="0.1143%" y="613" width="16.8656%" height="15" fill="rgb(244,218,35)" fg:x="14857645" fg:w="2192695864"/><text x="0.3643%" y="623.50">__libc_start_main</text></g><g><title>[libc.so.6] (2,192,695,864 samples, 16.87%)</title><rect x="0.1143%" y="597" width="16.8656%" height="15" fill="rgb(240,68,47)" fg:x="14857645" fg:w="2192695864"/><text x="0.3643%" y="607.50">[libc.so.6]</text></g><g><title>main (2,192,695,864 samples, 16.87%)</title><rect x="0.1143%" y="581" width="16.8656%" height="15" fill="rgb(210,16,53)" fg:x="14857645" fg:w="2192695864"/><text x="0.3643%" y="591.50">main</text></g><g><title>std::rt::lang_start_internal (2,192,695,864 samples, 16.87%)</title><rect x="0.1143%" y="565" width="16.8656%" height="15" fill="rgb(235,124,12)" fg:x="14857645" fg:w="2192695864"/><text x="0.3643%" y="575.50">std::rt::lang_start_intern..</text></g><g><title>std::rt::lang_start::{{closure}} (2,192,695,864 samples, 16.87%)</title><rect x="0.1143%" y="549" width="16.8656%" height="15" fill="rgb(224,169,11)" fg:x="14857645" fg:w="2192695864"/><text x="0.3643%" y="559.50">std::rt::lang_start::{{clo..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (2,192,695,864 samples, 16.87%)</title><rect x="0.1143%" y="533" width="16.8656%" height="15" fill="rgb(250,166,2)" fg:x="14857645" fg:w="2192695864"/><text x="0.3643%" y="543.50">std::sys::backtrace::__rus..</text></g><g><title>stress_test::main (2,192,695,864 samples, 16.87%)</title><rect x="0.1143%" y="517" width="16.8656%" height="15" fill="rgb(242,216,29)" fg:x="14857645" fg:w="2192695864"/><text x="0.3643%" y="527.50">stress_test::main</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (2,192,567,463 samples, 16.86%)</title><rect x="0.1153%" y="501" width="16.8646%" height="15" fill="rgb(230,116,27)" fg:x="14986046" fg:w="2192567463"/><text x="0.3653%" y="511.50">tokio::runtime::runtime::R..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2,192,567,463 samples, 16.86%)</title><rect x="0.1153%" y="485" width="16.8646%" height="15" fill="rgb(228,99,48)" fg:x="14986046" fg:w="2192567463"/><text x="0.3653%" y="495.50">tokio::runtime::context::r..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2,192,567,463 samples, 16.86%)</title><rect x="0.1153%" y="469" width="16.8646%" height="15" fill="rgb(253,11,6)" fg:x="14986046" fg:w="2192567463"/><text x="0.3653%" y="479.50">tokio::runtime::park::Cach..</text></g><g><title>tokio::task::spawn::spawn (1,613,603,591 samples, 12.41%)</title><rect x="4.5685%" y="453" width="12.4114%" height="15" fill="rgb(247,143,39)" fg:x="593949918" fg:w="1613603591"/><text x="4.8185%" y="463.50">tokio::task::spawn:..</text></g><g><title>tokio::runtime::task::id::Id::next (19,412,721 samples, 0.15%)</title><rect x="16.8305%" y="437" width="0.1493%" height="15" fill="rgb(236,97,10)" fg:x="2188140788" fg:w="19412721"/><text x="17.0805%" y="447.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,790,190 samples, 0.01%)</title><rect x="16.9798%" y="629" width="0.0138%" height="15" fill="rgb(233,208,19)" fg:x="2207553509" fg:w="1790190"/><text x="17.2298%" y="639.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1,790,190 samples, 0.01%)</title><rect x="16.9798%" y="613" width="0.0138%" height="15" fill="rgb(216,164,2)" fg:x="2207553509" fg:w="1790190"/><text x="17.2298%" y="623.50"></text></g><g><title>__lll_lock_wake_private (4,129,197 samples, 0.03%)</title><rect x="16.9936%" y="613" width="0.0318%" height="15" fill="rgb(220,129,5)" fg:x="2209343699" fg:w="4129197"/><text x="17.2436%" y="623.50"></text></g><g><title>[unknown] (4,129,197 samples, 0.03%)</title><rect x="16.9936%" y="597" width="0.0318%" height="15" fill="rgb(242,17,10)" fg:x="2209343699" fg:w="4129197"/><text x="17.2436%" y="607.50"></text></g><g><title>[[heap]] (5,664,694 samples, 0.04%)</title><rect x="16.9936%" y="629" width="0.0436%" height="15" fill="rgb(242,107,0)" fg:x="2209343699" fg:w="5664694"/><text x="17.2436%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,535,497 samples, 0.01%)</title><rect x="17.0254%" y="613" width="0.0118%" height="15" fill="rgb(251,28,31)" fg:x="2213472896" fg:w="1535497"/><text x="17.2754%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1,535,497 samples, 0.01%)</title><rect x="17.0254%" y="597" width="0.0118%" height="15" fill="rgb(233,223,10)" fg:x="2213472896" fg:w="1535497"/><text x="17.2754%" y="607.50"></text></g><g><title>stress_test::main::{{closure}}::{{closure}} (1,535,497 samples, 0.01%)</title><rect x="17.0254%" y="581" width="0.0118%" height="15" fill="rgb(215,21,27)" fg:x="2213472896" fg:w="1535497"/><text x="17.2754%" y="591.50"></text></g><g><title>[[vdso]] (3,337,050 samples, 0.03%)</title><rect x="17.0372%" y="629" width="0.0257%" height="15" fill="rgb(232,23,21)" fg:x="2215008393" fg:w="3337050"/><text x="17.2872%" y="639.50"></text></g><g><title>[unknown] (3,337,050 samples, 0.03%)</title><rect x="17.0372%" y="613" width="0.0257%" height="15" fill="rgb(244,5,23)" fg:x="2215008393" fg:w="3337050"/><text x="17.2872%" y="623.50"></text></g><g><title>[anon] (76,861,559 samples, 0.59%)</title><rect x="17.0628%" y="629" width="0.5912%" height="15" fill="rgb(226,81,46)" fg:x="2218345443" fg:w="76861559"/><text x="17.3128%" y="639.50"></text></g><g><title>anon.22b8bd3cb15e00049797bda5b940d468.11.llvm.996982396617364430 (76,861,559 samples, 0.59%)</title><rect x="17.0628%" y="613" width="0.5912%" height="15" fill="rgb(247,70,30)" fg:x="2218345443" fg:w="76861559"/><text x="17.3128%" y="623.50"></text></g><g><title>[[vdso]] (76,861,559 samples, 0.59%)</title><rect x="17.0628%" y="597" width="0.5912%" height="15" fill="rgb(212,68,19)" fg:x="2218345443" fg:w="76861559"/><text x="17.3128%" y="607.50"></text></g><g><title>[unknown] (76,861,559 samples, 0.59%)</title><rect x="17.0628%" y="581" width="0.5912%" height="15" fill="rgb(240,187,13)" fg:x="2218345443" fg:w="76861559"/><text x="17.3128%" y="591.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1,719,426 samples, 0.01%)</title><rect x="19.1828%" y="421" width="0.0132%" height="15" fill="rgb(223,113,26)" fg:x="2493958193" fg:w="1719426"/><text x="19.4328%" y="431.50"></text></g><g><title>pow (5,103,372 samples, 0.04%)</title><rect x="19.1960%" y="421" width="0.0393%" height="15" fill="rgb(206,192,2)" fg:x="2495677619" fg:w="5103372"/><text x="19.4460%" y="431.50"></text></g><g><title>[libm.so.6] (4,322,994 samples, 0.03%)</title><rect x="19.2020%" y="405" width="0.0333%" height="15" fill="rgb(241,108,4)" fg:x="2496457997" fg:w="4322994"/><text x="19.4520%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (18,051,686 samples, 0.14%)</title><rect x="19.2353%" y="421" width="0.1388%" height="15" fill="rgb(247,173,49)" fg:x="2500780991" fg:w="18051686"/><text x="19.4853%" y="431.50"></text></g><g><title>clock_gettime (18,051,686 samples, 0.14%)</title><rect x="19.2353%" y="405" width="0.1388%" height="15" fill="rgb(224,114,35)" fg:x="2500780991" fg:w="18051686"/><text x="19.4853%" y="415.50"></text></g><g><title>[[vdso]] (18,051,686 samples, 0.14%)</title><rect x="19.2353%" y="389" width="0.1388%" height="15" fill="rgb(245,159,27)" fg:x="2500780991" fg:w="18051686"/><text x="19.4853%" y="399.50"></text></g><g><title>[unknown] (18,051,686 samples, 0.14%)</title><rect x="19.2353%" y="373" width="0.1388%" height="15" fill="rgb(245,172,44)" fg:x="2500780991" fg:w="18051686"/><text x="19.4853%" y="383.50"></text></g><g><title>[unknown] (17,874,159 samples, 0.14%)</title><rect x="19.2366%" y="357" width="0.1375%" height="15" fill="rgb(236,23,11)" fg:x="2500958518" fg:w="17874159"/><text x="19.4866%" y="367.50"></text></g><g><title>[unknown] (17,874,159 samples, 0.14%)</title><rect x="19.2366%" y="341" width="0.1375%" height="15" fill="rgb(205,117,38)" fg:x="2500958518" fg:w="17874159"/><text x="19.4866%" y="351.50"></text></g><g><title>[unknown] (17,258,570 samples, 0.13%)</title><rect x="19.2414%" y="325" width="0.1327%" height="15" fill="rgb(237,72,25)" fg:x="2501574107" fg:w="17258570"/><text x="19.4914%" y="335.50"></text></g><g><title>[unknown] (17,258,570 samples, 0.13%)</title><rect x="19.2414%" y="309" width="0.1327%" height="15" fill="rgb(244,70,9)" fg:x="2501574107" fg:w="17258570"/><text x="19.4914%" y="319.50"></text></g><g><title>[unknown] (17,258,570 samples, 0.13%)</title><rect x="19.2414%" y="293" width="0.1327%" height="15" fill="rgb(217,125,39)" fg:x="2501574107" fg:w="17258570"/><text x="19.4914%" y="303.50"></text></g><g><title>[unknown] (15,198,010 samples, 0.12%)</title><rect x="19.2572%" y="277" width="0.1169%" height="15" fill="rgb(235,36,10)" fg:x="2503634667" fg:w="15198010"/><text x="19.5072%" y="287.50"></text></g><g><title>std::time::Instant::elapsed (12,075,879 samples, 0.09%)</title><rect x="19.3741%" y="421" width="0.0929%" height="15" fill="rgb(251,123,47)" fg:x="2518832677" fg:w="12075879"/><text x="19.6241%" y="431.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (11,429,561 samples, 0.09%)</title><rect x="19.3791%" y="405" width="0.0879%" height="15" fill="rgb(221,13,13)" fg:x="2519478995" fg:w="11429561"/><text x="19.6291%" y="415.50"></text></g><g><title>clock_gettime (11,429,561 samples, 0.09%)</title><rect x="19.3791%" y="389" width="0.0879%" height="15" fill="rgb(238,131,9)" fg:x="2519478995" fg:w="11429561"/><text x="19.6291%" y="399.50"></text></g><g><title>[[vdso]] (11,216,453 samples, 0.09%)</title><rect x="19.3807%" y="373" width="0.0863%" height="15" fill="rgb(211,50,8)" fg:x="2519692103" fg:w="11216453"/><text x="19.6307%" y="383.50"></text></g><g><title>[unknown] (10,647,557 samples, 0.08%)</title><rect x="19.3851%" y="357" width="0.0819%" height="15" fill="rgb(245,182,24)" fg:x="2520260999" fg:w="10647557"/><text x="19.6351%" y="367.50"></text></g><g><title>[unknown] (10,124,014 samples, 0.08%)</title><rect x="19.3891%" y="341" width="0.0779%" height="15" fill="rgb(242,14,37)" fg:x="2520784542" fg:w="10124014"/><text x="19.6391%" y="351.50"></text></g><g><title>[unknown] (10,124,014 samples, 0.08%)</title><rect x="19.3891%" y="325" width="0.0779%" height="15" fill="rgb(246,228,12)" fg:x="2520784542" fg:w="10124014"/><text x="19.6391%" y="335.50"></text></g><g><title>[unknown] (10,124,014 samples, 0.08%)</title><rect x="19.3891%" y="309" width="0.0779%" height="15" fill="rgb(213,55,15)" fg:x="2520784542" fg:w="10124014"/><text x="19.6391%" y="319.50"></text></g><g><title>[unknown] (9,697,355 samples, 0.07%)</title><rect x="19.3924%" y="293" width="0.0746%" height="15" fill="rgb(209,9,3)" fg:x="2521211201" fg:w="9697355"/><text x="19.6424%" y="303.50"></text></g><g><title>[unknown] (8,528,967 samples, 0.07%)</title><rect x="19.4014%" y="277" width="0.0656%" height="15" fill="rgb(230,59,30)" fg:x="2522379589" fg:w="8528967"/><text x="19.6514%" y="287.50"></text></g><g><title>[unknown] (5,880,872 samples, 0.05%)</title><rect x="19.4218%" y="261" width="0.0452%" height="15" fill="rgb(209,121,21)" fg:x="2525027684" fg:w="5880872"/><text x="19.6718%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back (46,435,406 samples, 0.36%)</title><rect x="19.4675%" y="421" width="0.3572%" height="15" fill="rgb(220,109,13)" fg:x="2530976102" fg:w="46435406"/><text x="19.7175%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (1,660,919 samples, 0.01%)</title><rect x="19.8417%" y="405" width="0.0128%" height="15" fill="rgb(232,18,1)" fg:x="2579621547" fg:w="1660919"/><text x="20.0917%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (15,690,104 samples, 0.12%)</title><rect x="19.8747%" y="389" width="0.1207%" height="15" fill="rgb(215,41,42)" fg:x="2583917679" fg:w="15690104"/><text x="20.1247%" y="399.50"></text></g><g><title>clock_gettime (15,690,104 samples, 0.12%)</title><rect x="19.8747%" y="373" width="0.1207%" height="15" fill="rgb(224,123,36)" fg:x="2583917679" fg:w="15690104"/><text x="20.1247%" y="383.50"></text></g><g><title>[[vdso]] (15,690,104 samples, 0.12%)</title><rect x="19.8747%" y="357" width="0.1207%" height="15" fill="rgb(240,125,3)" fg:x="2583917679" fg:w="15690104"/><text x="20.1247%" y="367.50"></text></g><g><title>[unknown] (15,690,104 samples, 0.12%)</title><rect x="19.8747%" y="341" width="0.1207%" height="15" fill="rgb(205,98,50)" fg:x="2583917679" fg:w="15690104"/><text x="20.1247%" y="351.50"></text></g><g><title>[unknown] (15,180,432 samples, 0.12%)</title><rect x="19.8786%" y="325" width="0.1168%" height="15" fill="rgb(205,185,37)" fg:x="2584427351" fg:w="15180432"/><text x="20.1286%" y="335.50"></text></g><g><title>[unknown] (15,180,432 samples, 0.12%)</title><rect x="19.8786%" y="309" width="0.1168%" height="15" fill="rgb(238,207,15)" fg:x="2584427351" fg:w="15180432"/><text x="20.1286%" y="319.50"></text></g><g><title>[unknown] (14,408,376 samples, 0.11%)</title><rect x="19.8846%" y="293" width="0.1108%" height="15" fill="rgb(213,199,42)" fg:x="2585199407" fg:w="14408376"/><text x="20.1346%" y="303.50"></text></g><g><title>[unknown] (13,667,184 samples, 0.11%)</title><rect x="19.8903%" y="277" width="0.1051%" height="15" fill="rgb(235,201,11)" fg:x="2585940599" fg:w="13667184"/><text x="20.1403%" y="287.50"></text></g><g><title>[unknown] (11,891,189 samples, 0.09%)</title><rect x="19.9039%" y="261" width="0.0915%" height="15" fill="rgb(207,46,11)" fg:x="2587716594" fg:w="11891189"/><text x="20.1539%" y="271.50"></text></g><g><title>[unknown] (8,951,663 samples, 0.07%)</title><rect x="19.9266%" y="245" width="0.0689%" height="15" fill="rgb(241,35,35)" fg:x="2590656120" fg:w="8951663"/><text x="20.1766%" y="255.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (14,868,157 samples, 0.11%)</title><rect x="20.0038%" y="389" width="0.1144%" height="15" fill="rgb(243,32,47)" fg:x="2600697481" fg:w="14868157"/><text x="20.2538%" y="399.50"></text></g><g><title>mio::poll::Poll::poll (14,868,157 samples, 0.11%)</title><rect x="20.0038%" y="373" width="0.1144%" height="15" fill="rgb(247,202,23)" fg:x="2600697481" fg:w="14868157"/><text x="20.2538%" y="383.50"></text></g><g><title>epoll_wait (14,868,157 samples, 0.11%)</title><rect x="20.0038%" y="357" width="0.1144%" height="15" fill="rgb(219,102,11)" fg:x="2600697481" fg:w="14868157"/><text x="20.2538%" y="367.50"></text></g><g><title>[unknown] (14,868,157 samples, 0.11%)</title><rect x="20.0038%" y="341" width="0.1144%" height="15" fill="rgb(243,110,44)" fg:x="2600697481" fg:w="14868157"/><text x="20.2538%" y="351.50"></text></g><g><title>[unknown] (14,508,545 samples, 0.11%)</title><rect x="20.0066%" y="325" width="0.1116%" height="15" fill="rgb(222,74,54)" fg:x="2601057093" fg:w="14508545"/><text x="20.2566%" y="335.50"></text></g><g><title>[unknown] (14,508,545 samples, 0.11%)</title><rect x="20.0066%" y="309" width="0.1116%" height="15" fill="rgb(216,99,12)" fg:x="2601057093" fg:w="14508545"/><text x="20.2566%" y="319.50"></text></g><g><title>[unknown] (11,585,255 samples, 0.09%)</title><rect x="20.0290%" y="293" width="0.0891%" height="15" fill="rgb(226,22,26)" fg:x="2603980383" fg:w="11585255"/><text x="20.2790%" y="303.50"></text></g><g><title>[unknown] (9,779,312 samples, 0.08%)</title><rect x="20.0429%" y="277" width="0.0752%" height="15" fill="rgb(217,163,10)" fg:x="2605786326" fg:w="9779312"/><text x="20.2929%" y="287.50"></text></g><g><title>[unknown] (4,206,223 samples, 0.03%)</title><rect x="20.0858%" y="261" width="0.0324%" height="15" fill="rgb(213,25,53)" fg:x="2611359415" fg:w="4206223"/><text x="20.3358%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (39,792,315 samples, 0.31%)</title><rect x="19.8247%" y="421" width="0.3061%" height="15" fill="rgb(252,105,26)" fg:x="2577411508" fg:w="39792315"/><text x="20.0747%" y="431.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (35,921,357 samples, 0.28%)</title><rect x="19.8545%" y="405" width="0.2763%" height="15" fill="rgb(220,39,43)" fg:x="2581282466" fg:w="35921357"/><text x="20.1045%" y="415.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1,638,185 samples, 0.01%)</title><rect x="20.1181%" y="389" width="0.0126%" height="15" fill="rgb(229,68,48)" fg:x="2615565638" fg:w="1638185"/><text x="20.3681%" y="399.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (19,004,721 samples, 0.15%)</title><rect x="22.1319%" y="373" width="0.1462%" height="15" fill="rgb(252,8,32)" fg:x="2877378337" fg:w="19004721"/><text x="22.3819%" y="383.50"></text></g><g><title>&lt;log::__private_api::GlobalLogger as log::Log&gt;::log (1,608,906 samples, 0.01%)</title><rect x="25.1031%" y="357" width="0.0124%" height="15" fill="rgb(223,20,43)" fg:x="3263666249" fg:w="1608906"/><text x="25.3531%" y="367.50"></text></g><g><title>&lt;tokio::sync::semaphore::OwnedSemaphorePermit as core::ops::drop::Drop&gt;::drop (2,591,684 samples, 0.02%)</title><rect x="25.1247%" y="357" width="0.0199%" height="15" fill="rgb(229,81,49)" fg:x="3266470877" fg:w="2591684"/><text x="25.3747%" y="367.50"></text></g><g><title>&lt;tokio_socks::io::ReadExact&lt;R&gt; as core::future::future::Future&gt;::poll (1,662,718 samples, 0.01%)</title><rect x="25.1446%" y="357" width="0.0128%" height="15" fill="rgb(236,28,36)" fg:x="3269062561" fg:w="1662718"/><text x="25.3946%" y="367.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,662,718 samples, 0.01%)</title><rect x="25.1446%" y="341" width="0.0128%" height="15" fill="rgb(249,185,26)" fg:x="3269062561" fg:w="1662718"/><text x="25.3946%" y="351.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1,662,718 samples, 0.01%)</title><rect x="25.1446%" y="325" width="0.0128%" height="15" fill="rgb(249,174,33)" fg:x="3269062561" fg:w="1662718"/><text x="25.3946%" y="335.50"></text></g><g><title>&lt;log::Metadata as tracing_log::AsTrace&gt;::as_trace (18,210,443 samples, 0.14%)</title><rect x="25.2434%" y="325" width="0.1401%" height="15" fill="rgb(233,201,37)" fg:x="3281898262" fg:w="18210443"/><text x="25.4934%" y="335.50"></text></g><g><title>tracing_core::dispatcher::get_default (63,526,781 samples, 0.49%)</title><rect x="25.1853%" y="341" width="0.4886%" height="15" fill="rgb(221,78,26)" fg:x="3274343087" fg:w="63526781"/><text x="25.4353%" y="351.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (37,761,163 samples, 0.29%)</title><rect x="25.3834%" y="325" width="0.2904%" height="15" fill="rgb(250,127,30)" fg:x="3300108705" fg:w="37761163"/><text x="25.6334%" y="335.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (23,952,949 samples, 0.18%)</title><rect x="25.4897%" y="309" width="0.1842%" height="15" fill="rgb(230,49,44)" fg:x="3313916919" fg:w="23952949"/><text x="25.7397%" y="319.50"></text></g><g><title>&lt;log::Record as tracing_log::AsTrace&gt;::as_trace (25,626,112 samples, 0.20%)</title><rect x="25.8146%" y="325" width="0.1971%" height="15" fill="rgb(229,67,23)" fg:x="3356169075" fg:w="25626112"/><text x="26.0646%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (14,145,260 samples, 0.11%)</title><rect x="26.0118%" y="325" width="0.1088%" height="15" fill="rgb(249,83,47)" fg:x="3381795187" fg:w="14145260"/><text x="26.2618%" y="335.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (4,931,424 samples, 0.04%)</title><rect x="26.0826%" y="309" width="0.0379%" height="15" fill="rgb(215,43,3)" fg:x="3391009023" fg:w="4931424"/><text x="26.3326%" y="319.50"></text></g><g><title>core::slice::memchr::memrchr (30,721,055 samples, 0.24%)</title><rect x="27.6675%" y="245" width="0.2363%" height="15" fill="rgb(238,154,13)" fg:x="3597063641" fg:w="30721055"/><text x="27.9175%" y="255.50"></text></g><g><title>[libc.so.6] (19,046,745 samples, 0.15%)</title><rect x="27.9994%" y="229" width="0.1465%" height="15" fill="rgb(219,56,2)" fg:x="3640205366" fg:w="19046745"/><text x="28.2494%" y="239.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (773,364,500 samples, 5.95%)</title><rect x="27.4304%" y="261" width="5.9485%" height="15" fill="rgb(233,0,4)" fg:x="3566239862" fg:w="773364500"/><text x="27.6804%" y="271.50">&lt;std::io..</text></g><g><title>write (711,819,666 samples, 5.48%)</title><rect x="27.9038%" y="245" width="5.4751%" height="15" fill="rgb(235,30,7)" fg:x="3627784696" fg:w="711819666"/><text x="28.1538%" y="255.50">write</text></g><g><title>[unknown] (680,352,251 samples, 5.23%)</title><rect x="28.1459%" y="229" width="5.2331%" height="15" fill="rgb(250,79,13)" fg:x="3659252111" fg:w="680352251"/><text x="28.3959%" y="239.50">[unkno..</text></g><g><title>[unknown] (622,568,562 samples, 4.79%)</title><rect x="28.5903%" y="213" width="4.7886%" height="15" fill="rgb(211,146,34)" fg:x="3717035800" fg:w="622568562"/><text x="28.8403%" y="223.50">[unkno..</text></g><g><title>[unknown] (604,750,244 samples, 4.65%)</title><rect x="28.7274%" y="197" width="4.6516%" height="15" fill="rgb(228,22,38)" fg:x="3734854118" fg:w="604750244"/><text x="28.9774%" y="207.50">[unkn..</text></g><g><title>[unknown] (583,155,051 samples, 4.49%)</title><rect x="28.8935%" y="181" width="4.4855%" height="15" fill="rgb(235,168,5)" fg:x="3756449311" fg:w="583155051"/><text x="29.1435%" y="191.50">[unkn..</text></g><g><title>[unknown] (580,221,563 samples, 4.46%)</title><rect x="28.9160%" y="165" width="4.4629%" height="15" fill="rgb(221,155,16)" fg:x="3759382799" fg:w="580221563"/><text x="29.1660%" y="175.50">[unkn..</text></g><g><title>[unknown] (558,709,482 samples, 4.30%)</title><rect x="29.0815%" y="149" width="4.2974%" height="15" fill="rgb(215,215,53)" fg:x="3780894880" fg:w="558709482"/><text x="29.3315%" y="159.50">[unkn..</text></g><g><title>[unknown] (286,682,009 samples, 2.21%)</title><rect x="31.1739%" y="133" width="2.2051%" height="15" fill="rgb(223,4,10)" fg:x="4052922353" fg:w="286682009"/><text x="31.4239%" y="143.50">[..</text></g><g><title>[unknown] (253,349,006 samples, 1.95%)</title><rect x="31.4303%" y="117" width="1.9487%" height="15" fill="rgb(234,103,6)" fg:x="4086255356" fg:w="253349006"/><text x="31.6803%" y="127.50">[..</text></g><g><title>[unknown] (150,997,900 samples, 1.16%)</title><rect x="32.2175%" y="101" width="1.1614%" height="15" fill="rgb(227,97,0)" fg:x="4188606462" fg:w="150997900"/><text x="32.4675%" y="111.50"></text></g><g><title>[unknown] (34,831,559 samples, 0.27%)</title><rect x="33.1110%" y="85" width="0.2679%" height="15" fill="rgb(234,150,53)" fg:x="4304772803" fg:w="34831559"/><text x="33.3610%" y="95.50"></text></g><g><title>[unknown] (2,606,617 samples, 0.02%)</title><rect x="33.3589%" y="69" width="0.0200%" height="15" fill="rgb(228,201,54)" fg:x="4336997745" fg:w="2606617"/><text x="33.6089%" y="79.50"></text></g><g><title>[unknown] (2,606,617 samples, 0.02%)</title><rect x="33.3589%" y="53" width="0.0200%" height="15" fill="rgb(222,22,37)" fg:x="4336997745" fg:w="2606617"/><text x="33.6089%" y="63.50"></text></g><g><title>[unknown] (1,488,392 samples, 0.01%)</title><rect x="33.3675%" y="37" width="0.0114%" height="15" fill="rgb(237,53,32)" fg:x="4338115970" fg:w="1488392"/><text x="33.6175%" y="47.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1,902,319,898 samples, 14.63%)</title><rect x="33.3789%" y="261" width="14.6321%" height="15" fill="rgb(233,25,53)" fg:x="4339604362" fg:w="1902319898"/><text x="33.6289%" y="271.50">std::sys::sync::mutex:..</text></g><g><title>syscall (542,815,138 samples, 4.18%)</title><rect x="43.8358%" y="245" width="4.1752%" height="15" fill="rgb(210,40,34)" fg:x="5699109122" fg:w="542815138"/><text x="44.0858%" y="255.50">sysca..</text></g><g><title>[unknown] (528,099,695 samples, 4.06%)</title><rect x="43.9490%" y="229" width="4.0620%" height="15" fill="rgb(241,220,44)" fg:x="5713824565" fg:w="528099695"/><text x="44.1990%" y="239.50">[unk..</text></g><g><title>[unknown] (479,794,155 samples, 3.69%)</title><rect x="44.3206%" y="213" width="3.6904%" height="15" fill="rgb(235,28,35)" fg:x="5762130105" fg:w="479794155"/><text x="44.5706%" y="223.50">[unk..</text></g><g><title>[unknown] (471,109,393 samples, 3.62%)</title><rect x="44.3874%" y="197" width="3.6236%" height="15" fill="rgb(210,56,17)" fg:x="5770814867" fg:w="471109393"/><text x="44.6374%" y="207.50">[unk..</text></g><g><title>[unknown] (446,194,719 samples, 3.43%)</title><rect x="44.5790%" y="181" width="3.4320%" height="15" fill="rgb(224,130,29)" fg:x="5795729541" fg:w="446194719"/><text x="44.8290%" y="191.50">[un..</text></g><g><title>[unknown] (422,162,582 samples, 3.25%)</title><rect x="44.7639%" y="165" width="3.2471%" height="15" fill="rgb(235,212,8)" fg:x="5819761678" fg:w="422162582"/><text x="45.0139%" y="175.50">[un..</text></g><g><title>[unknown] (407,226,471 samples, 3.13%)</title><rect x="44.8787%" y="149" width="3.1323%" height="15" fill="rgb(223,33,50)" fg:x="5834697789" fg:w="407226471"/><text x="45.1287%" y="159.50">[un..</text></g><g><title>[unknown] (307,824,513 samples, 2.37%)</title><rect x="45.6433%" y="133" width="2.3677%" height="15" fill="rgb(219,149,13)" fg:x="5934099747" fg:w="307824513"/><text x="45.8933%" y="143.50">[u..</text></g><g><title>[unknown] (262,023,349 samples, 2.02%)</title><rect x="45.9956%" y="117" width="2.0154%" height="15" fill="rgb(250,156,29)" fg:x="5979900911" fg:w="262023349"/><text x="46.2456%" y="127.50">[..</text></g><g><title>[unknown] (213,369,990 samples, 1.64%)</title><rect x="46.3698%" y="101" width="1.6412%" height="15" fill="rgb(216,193,19)" fg:x="6028554270" fg:w="213369990"/><text x="46.6198%" y="111.50"></text></g><g><title>[unknown] (32,446,538 samples, 0.25%)</title><rect x="47.7614%" y="85" width="0.2496%" height="15" fill="rgb(216,135,14)" fg:x="6209477722" fg:w="32446538"/><text x="48.0114%" y="95.50"></text></g><g><title>[unknown] (12,900,106 samples, 0.10%)</title><rect x="47.9118%" y="69" width="0.0992%" height="15" fill="rgb(241,47,5)" fg:x="6229024154" fg:w="12900106"/><text x="48.1618%" y="79.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (2,986,833,634 samples, 22.97%)</title><rect x="26.5967%" y="293" width="22.9738%" height="15" fill="rgb(233,42,35)" fg:x="3457844465" fg:w="2986833634"/><text x="26.8467%" y="303.50">&lt;std::io::stdio::Stdout as std::io::..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (2,977,084,914 samples, 22.90%)</title><rect x="26.6717%" y="277" width="22.8988%" height="15" fill="rgb(231,13,6)" fg:x="3467593185" fg:w="2977084914"/><text x="26.9217%" y="287.50">&lt;&amp;std::io::stdio::Stdout as std::io:..</text></g><g><title>syscall (202,753,839 samples, 1.56%)</title><rect x="48.0110%" y="261" width="1.5595%" height="15" fill="rgb(207,181,40)" fg:x="6241924260" fg:w="202753839"/><text x="48.2610%" y="271.50"></text></g><g><title>[unknown] (202,753,839 samples, 1.56%)</title><rect x="48.0110%" y="245" width="1.5595%" height="15" fill="rgb(254,173,49)" fg:x="6241924260" fg:w="202753839"/><text x="48.2610%" y="255.50"></text></g><g><title>[unknown] (182,486,973 samples, 1.40%)</title><rect x="48.1669%" y="229" width="1.4036%" height="15" fill="rgb(221,1,38)" fg:x="6262191126" fg:w="182486973"/><text x="48.4169%" y="239.50"></text></g><g><title>[unknown] (182,486,973 samples, 1.40%)</title><rect x="48.1669%" y="213" width="1.4036%" height="15" fill="rgb(206,124,46)" fg:x="6262191126" fg:w="182486973"/><text x="48.4169%" y="223.50"></text></g><g><title>[unknown] (181,000,177 samples, 1.39%)</title><rect x="48.1783%" y="197" width="1.3922%" height="15" fill="rgb(249,21,11)" fg:x="6263677922" fg:w="181000177"/><text x="48.4283%" y="207.50"></text></g><g><title>[unknown] (179,286,102 samples, 1.38%)</title><rect x="48.1915%" y="181" width="1.3790%" height="15" fill="rgb(222,201,40)" fg:x="6265391997" fg:w="179286102"/><text x="48.4415%" y="191.50"></text></g><g><title>[unknown] (177,389,355 samples, 1.36%)</title><rect x="48.2061%" y="165" width="1.3644%" height="15" fill="rgb(235,61,29)" fg:x="6267288744" fg:w="177389355"/><text x="48.4561%" y="175.50"></text></g><g><title>[unknown] (105,765,592 samples, 0.81%)</title><rect x="48.7570%" y="149" width="0.8135%" height="15" fill="rgb(219,207,3)" fg:x="6338912507" fg:w="105765592"/><text x="49.0070%" y="159.50"></text></g><g><title>[unknown] (46,209,286 samples, 0.36%)</title><rect x="49.2151%" y="133" width="0.3554%" height="15" fill="rgb(222,56,46)" fg:x="6398468813" fg:w="46209286"/><text x="49.4651%" y="143.50"></text></g><g><title>[unknown] (17,314,533 samples, 0.13%)</title><rect x="49.4374%" y="117" width="0.1332%" height="15" fill="rgb(239,76,54)" fg:x="6427363566" fg:w="17314533"/><text x="49.6874%" y="127.50"></text></g><g><title>[unknown] (8,184,190 samples, 0.06%)</title><rect x="49.5076%" y="101" width="0.0630%" height="15" fill="rgb(231,124,27)" fg:x="6436493909" fg:w="8184190"/><text x="49.7576%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (28,484,007 samples, 0.22%)</title><rect x="50.8018%" y="277" width="0.2191%" height="15" fill="rgb(249,195,6)" fg:x="6604761934" fg:w="28484007"/><text x="51.0518%" y="287.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (10,133,137 samples, 0.08%)</title><rect x="52.1842%" y="245" width="0.0779%" height="15" fill="rgb(237,174,47)" fg:x="6784486744" fg:w="10133137"/><text x="52.4342%" y="255.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (23,984,312 samples, 0.18%)</title><rect x="52.2622%" y="245" width="0.1845%" height="15" fill="rgb(206,201,31)" fg:x="6794619881" fg:w="23984312"/><text x="52.5122%" y="255.50"></text></g><g><title>&lt;str as tracing_core::field::Value&gt;::record (4,714,728 samples, 0.04%)</title><rect x="52.4467%" y="245" width="0.0363%" height="15" fill="rgb(231,57,52)" fg:x="6818604193" fg:w="4714728"/><text x="52.6967%" y="255.50"></text></g><g><title>&lt;tracing_log::LogVisitor as tracing_core::field::Visit&gt;::record_str (31,415,310 samples, 0.24%)</title><rect x="52.4829%" y="245" width="0.2416%" height="15" fill="rgb(248,177,22)" fg:x="6823318921" fg:w="31415310"/><text x="52.7329%" y="255.50"></text></g><g><title>&lt;tracing_log::LogVisitor as tracing_core::field::Visit&gt;::record_u64 (12,752,654 samples, 0.10%)</title><rect x="52.7246%" y="245" width="0.0981%" height="15" fill="rgb(215,211,37)" fg:x="6854734231" fg:w="12752654"/><text x="52.9746%" y="255.50"></text></g><g><title>tracing_core::field::ValueSet::record (149,694,845 samples, 1.15%)</title><rect x="51.7245%" y="261" width="1.1514%" height="15" fill="rgb(241,128,51)" fg:x="6724712247" fg:w="149694845"/><text x="51.9745%" y="271.50"></text></g><g><title>&lt;u32 as tracing_core::field::Value&gt;::record (6,920,207 samples, 0.05%)</title><rect x="52.8227%" y="245" width="0.0532%" height="15" fill="rgb(227,165,31)" fg:x="6867486885" fg:w="6920207"/><text x="53.0727%" y="255.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (272,506,653 samples, 2.10%)</title><rect x="51.0209%" y="277" width="2.0960%" height="15" fill="rgb(228,167,24)" fg:x="6633245941" fg:w="272506653"/><text x="51.2709%" y="287.50">&lt;..</text></g><g><title>tracing_log::level_to_cs (31,345,502 samples, 0.24%)</title><rect x="52.8759%" y="261" width="0.2411%" height="15" fill="rgb(228,143,12)" fg:x="6874407092" fg:w="31345502"/><text x="53.1259%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (51,921,791 samples, 0.40%)</title><rect x="54.3608%" y="261" width="0.3994%" height="15" fill="rgb(249,149,8)" fg:x="7067456482" fg:w="51921791"/><text x="54.6108%" y="271.50"></text></g><g><title>[libc.so.6] (19,287,397 samples, 0.15%)</title><rect x="54.6118%" y="245" width="0.1484%" height="15" fill="rgb(243,35,44)" fg:x="7100090876" fg:w="19287397"/><text x="54.8618%" y="255.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (5,796,442 samples, 0.04%)</title><rect x="54.7601%" y="261" width="0.0446%" height="15" fill="rgb(246,89,9)" fg:x="7119378273" fg:w="5796442"/><text x="55.0101%" y="271.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (9,348,083 samples, 0.07%)</title><rect x="54.9758%" y="229" width="0.0719%" height="15" fill="rgb(233,213,13)" fg:x="7147413071" fg:w="9348083"/><text x="55.2258%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (25,377,873 samples, 0.20%)</title><rect x="55.0477%" y="229" width="0.1952%" height="15" fill="rgb(233,141,41)" fg:x="7156761154" fg:w="25377873"/><text x="55.2977%" y="239.50"></text></g><g><title>[libc.so.6] (18,261,585 samples, 0.14%)</title><rect x="55.1024%" y="213" width="0.1405%" height="15" fill="rgb(239,167,4)" fg:x="7163877442" fg:w="18261585"/><text x="55.3524%" y="223.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (8,986,724 samples, 0.07%)</title><rect x="55.2429%" y="229" width="0.0691%" height="15" fill="rgb(209,217,16)" fg:x="7182139027" fg:w="8986724"/><text x="55.4929%" y="239.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (119,277,253 samples, 0.92%)</title><rect x="54.8047%" y="261" width="0.9174%" height="15" fill="rgb(219,88,35)" fg:x="7125174715" fg:w="119277253"/><text x="55.0547%" y="271.50"></text></g><g><title>core::fmt::write (114,912,726 samples, 0.88%)</title><rect x="54.8383%" y="245" width="0.8839%" height="15" fill="rgb(220,193,23)" fg:x="7129539242" fg:w="114912726"/><text x="55.0883%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad (53,326,217 samples, 0.41%)</title><rect x="55.3120%" y="229" width="0.4102%" height="15" fill="rgb(230,90,52)" fg:x="7191125751" fg:w="53326217"/><text x="55.5620%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (30,175,990 samples, 0.23%)</title><rect x="55.9844%" y="245" width="0.2321%" height="15" fill="rgb(252,106,19)" fg:x="7278541702" fg:w="30175990"/><text x="56.2344%" y="255.50"></text></g><g><title>[libc.so.6] (25,612,060 samples, 0.20%)</title><rect x="56.0195%" y="229" width="0.1970%" height="15" fill="rgb(206,74,20)" fg:x="7283105632" fg:w="25612060"/><text x="56.2695%" y="239.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_str (6,374,157 samples, 0.05%)</title><rect x="56.2165%" y="245" width="0.0490%" height="15" fill="rgb(230,138,44)" fg:x="7308717692" fg:w="6374157"/><text x="56.4665%" y="255.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (3,760,493 samples, 0.03%)</title><rect x="56.6904%" y="229" width="0.0289%" height="15" fill="rgb(235,182,43)" fg:x="7370337817" fg:w="3760493"/><text x="56.9404%" y="239.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (6,086,419 samples, 0.05%)</title><rect x="57.0851%" y="197" width="0.0468%" height="15" fill="rgb(242,16,51)" fg:x="7421643049" fg:w="6086419"/><text x="57.3351%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24,825,408 samples, 0.19%)</title><rect x="57.1319%" y="197" width="0.1909%" height="15" fill="rgb(248,9,4)" fg:x="7427729468" fg:w="24825408"/><text x="57.3819%" y="207.50"></text></g><g><title>[libc.so.6] (10,213,433 samples, 0.08%)</title><rect x="57.2443%" y="181" width="0.0786%" height="15" fill="rgb(210,31,22)" fg:x="7442341443" fg:w="10213433"/><text x="57.4943%" y="191.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (2,344,107 samples, 0.02%)</title><rect x="57.3228%" y="197" width="0.0180%" height="15" fill="rgb(239,54,39)" fg:x="7452554876" fg:w="2344107"/><text x="57.5728%" y="207.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (84,149,512 samples, 0.65%)</title><rect x="56.7194%" y="229" width="0.6473%" height="15" fill="rgb(230,99,41)" fg:x="7374098310" fg:w="84149512"/><text x="56.9694%" y="239.50"></text></g><g><title>core::fmt::write (68,939,554 samples, 0.53%)</title><rect x="56.8363%" y="213" width="0.5303%" height="15" fill="rgb(253,106,12)" fg:x="7389308268" fg:w="68939554"/><text x="57.0863%" y="223.50"></text></g><g><title>core::fmt::Formatter::pad (3,348,839 samples, 0.03%)</title><rect x="57.3408%" y="197" width="0.0258%" height="15" fill="rgb(213,46,41)" fg:x="7454898983" fg:w="3348839"/><text x="57.5908%" y="207.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (21,094,434 samples, 0.16%)</title><rect x="57.9402%" y="213" width="0.1623%" height="15" fill="rgb(215,133,35)" fg:x="7532826594" fg:w="21094434"/><text x="58.1902%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (13,757,447 samples, 0.11%)</title><rect x="58.6639%" y="197" width="0.1058%" height="15" fill="rgb(213,28,5)" fg:x="7626906866" fg:w="13757447"/><text x="58.9139%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (55,744,414 samples, 0.43%)</title><rect x="58.7697%" y="197" width="0.4288%" height="15" fill="rgb(215,77,49)" fg:x="7640664313" fg:w="55744414"/><text x="59.0197%" y="207.50"></text></g><g><title>[libc.so.6] (14,474,423 samples, 0.11%)</title><rect x="59.0871%" y="181" width="0.1113%" height="15" fill="rgb(248,100,22)" fg:x="7681934304" fg:w="14474423"/><text x="59.3371%" y="191.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (462,564,888 samples, 3.56%)</title><rect x="55.7222%" y="261" width="3.5579%" height="15" fill="rgb(208,67,9)" fg:x="7244451968" fg:w="462564888"/><text x="55.9722%" y="271.50">&lt;nu_..</text></g><g><title>core::fmt::write (391,925,007 samples, 3.01%)</title><rect x="56.2655%" y="245" width="3.0146%" height="15" fill="rgb(219,133,21)" fg:x="7315091849" fg:w="391925007"/><text x="56.5155%" y="255.50">cor..</text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (248,769,034 samples, 1.91%)</title><rect x="57.3666%" y="229" width="1.9135%" height="15" fill="rgb(246,46,29)" fg:x="7458247822" fg:w="248769034"/><text x="57.6166%" y="239.50">n..</text></g><g><title>core::fmt::write (153,095,828 samples, 1.18%)</title><rect x="58.1025%" y="213" width="1.1776%" height="15" fill="rgb(246,185,52)" fg:x="7553921028" fg:w="153095828"/><text x="58.3525%" y="223.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (10,608,129 samples, 0.08%)</title><rect x="59.1985%" y="197" width="0.0816%" height="15" fill="rgb(252,136,11)" fg:x="7696408727" fg:w="10608129"/><text x="59.4485%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15,521,244 samples, 0.12%)</title><rect x="60.0205%" y="213" width="0.1194%" height="15" fill="rgb(219,138,53)" fg:x="7803280042" fg:w="15521244"/><text x="60.2705%" y="223.50"></text></g><g><title>[libc.so.6] (8,546,693 samples, 0.07%)</title><rect x="60.0741%" y="197" width="0.0657%" height="15" fill="rgb(211,51,23)" fg:x="7810254593" fg:w="8546693"/><text x="60.3241%" y="207.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_str (25,308,773 samples, 0.19%)</title><rect x="60.1399%" y="213" width="0.1947%" height="15" fill="rgb(247,221,28)" fg:x="7818801286" fg:w="25308773"/><text x="60.3899%" y="223.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (4,754,406 samples, 0.04%)</title><rect x="60.6332%" y="197" width="0.0366%" height="15" fill="rgb(251,222,45)" fg:x="7882944526" fg:w="4754406"/><text x="60.8832%" y="207.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (4,620,417 samples, 0.04%)</title><rect x="60.8393%" y="165" width="0.0355%" height="15" fill="rgb(217,162,53)" fg:x="7909732714" fg:w="4620417"/><text x="61.0893%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26,689,923 samples, 0.21%)</title><rect x="60.8748%" y="165" width="0.2053%" height="15" fill="rgb(229,93,14)" fg:x="7914353131" fg:w="26689923"/><text x="61.1248%" y="175.50"></text></g><g><title>[libc.so.6] (17,100,906 samples, 0.13%)</title><rect x="60.9486%" y="149" width="0.1315%" height="15" fill="rgb(209,67,49)" fg:x="7923942148" fg:w="17100906"/><text x="61.1986%" y="159.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (56,568,812 samples, 0.44%)</title><rect x="60.6698%" y="197" width="0.4351%" height="15" fill="rgb(213,87,29)" fg:x="7887698932" fg:w="56568812"/><text x="60.9198%" y="207.50"></text></g><g><title>core::fmt::write (45,834,754 samples, 0.35%)</title><rect x="60.7524%" y="181" width="0.3525%" height="15" fill="rgb(205,151,52)" fg:x="7898432990" fg:w="45834754"/><text x="61.0024%" y="191.50"></text></g><g><title>core::fmt::Formatter::pad (3,224,690 samples, 0.02%)</title><rect x="61.0801%" y="165" width="0.0248%" height="15" fill="rgb(253,215,39)" fg:x="7941043054" fg:w="3224690"/><text x="61.3301%" y="175.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (4,967,185 samples, 0.04%)</title><rect x="61.6165%" y="181" width="0.0382%" height="15" fill="rgb(221,220,41)" fg:x="8010781960" fg:w="4967185"/><text x="61.8665%" y="191.50"></text></g><g><title>core::fmt::write (60,599,132 samples, 0.47%)</title><rect x="61.6547%" y="181" width="0.4661%" height="15" fill="rgb(218,133,21)" fg:x="8015749145" fg:w="60599132"/><text x="61.9047%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (35,344,185 samples, 0.27%)</title><rect x="61.8490%" y="165" width="0.2719%" height="15" fill="rgb(221,193,43)" fg:x="8041004092" fg:w="35344185"/><text x="62.0990%" y="175.50"></text></g><g><title>[libc.so.6] (9,891,030 samples, 0.08%)</title><rect x="62.0448%" y="149" width="0.0761%" height="15" fill="rgb(240,128,52)" fg:x="8066457247" fg:w="9891030"/><text x="62.2948%" y="159.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (444,185,859 samples, 3.42%)</title><rect x="59.2801%" y="261" width="3.4165%" height="15" fill="rgb(253,114,12)" fg:x="7707016856" fg:w="444185859"/><text x="59.5301%" y="271.50">&lt;tr..</text></g><g><title>core::fmt::write (400,645,830 samples, 3.08%)</title><rect x="59.6150%" y="245" width="3.0816%" height="15" fill="rgb(215,223,47)" fg:x="7750556885" fg:w="400645830"/><text x="59.8650%" y="255.50">cor..</text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (368,578,494 samples, 2.83%)</title><rect x="59.8616%" y="229" width="2.8350%" height="15" fill="rgb(248,225,23)" fg:x="7782624221" fg:w="368578494"/><text x="60.1116%" y="239.50">&lt;n..</text></g><g><title>core::fmt::write (307,092,656 samples, 2.36%)</title><rect x="60.3345%" y="213" width="2.3621%" height="15" fill="rgb(250,108,0)" fg:x="7844110059" fg:w="307092656"/><text x="60.5845%" y="223.50">co..</text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (206,934,971 samples, 1.59%)</title><rect x="61.1049%" y="197" width="1.5917%" height="15" fill="rgb(228,208,7)" fg:x="7944267744" fg:w="206934971"/><text x="61.3549%" y="207.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Color&gt;::write_foreground_code (74,854,438 samples, 0.58%)</title><rect x="62.1208%" y="181" width="0.5758%" height="15" fill="rgb(244,45,10)" fg:x="8076348277" fg:w="74854438"/><text x="62.3708%" y="191.50"></text></g><g><title>core::fmt::write (46,120,724 samples, 0.35%)</title><rect x="62.3419%" y="165" width="0.3547%" height="15" fill="rgb(207,125,25)" fg:x="8105081991" fg:w="46120724"/><text x="62.5919%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14,636,767 samples, 0.11%)</title><rect x="62.5840%" y="149" width="0.1126%" height="15" fill="rgb(210,195,18)" fg:x="8136565948" fg:w="14636767"/><text x="62.8340%" y="159.50"></text></g><g><title>[libc.so.6] (4,297,969 samples, 0.03%)</title><rect x="62.6635%" y="133" width="0.0331%" height="15" fill="rgb(249,80,12)" fg:x="8146904746" fg:w="4297969"/><text x="62.9135%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (61,609,165 samples, 0.47%)</title><rect x="63.0599%" y="229" width="0.4739%" height="15" fill="rgb(221,65,9)" fg:x="8198436795" fg:w="61609165"/><text x="63.3099%" y="239.50"></text></g><g><title>[libc.so.6] (12,233,567 samples, 0.09%)</title><rect x="63.4397%" y="213" width="0.0941%" height="15" fill="rgb(235,49,36)" fg:x="8247812393" fg:w="12233567"/><text x="63.6897%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,800,296 samples, 0.01%)</title><rect x="63.5572%" y="213" width="0.0138%" height="15" fill="rgb(225,32,20)" fg:x="8263089320" fg:w="1800296"/><text x="63.8072%" y="223.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (4,926,613 samples, 0.04%)</title><rect x="63.5395%" y="229" width="0.0379%" height="15" fill="rgb(215,141,46)" fg:x="8260787455" fg:w="4926613"/><text x="63.7895%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9,239,806 samples, 0.07%)</title><rect x="63.7915%" y="213" width="0.0711%" height="15" fill="rgb(250,160,47)" fg:x="8293546678" fg:w="9239806"/><text x="64.0415%" y="223.50"></text></g><g><title>[libc.so.6] (3,892,151 samples, 0.03%)</title><rect x="63.8326%" y="197" width="0.0299%" height="15" fill="rgb(216,222,40)" fg:x="8298894333" fg:w="3892151"/><text x="64.0826%" y="207.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (53,234,101 samples, 0.41%)</title><rect x="63.5774%" y="229" width="0.4095%" height="15" fill="rgb(234,217,39)" fg:x="8265714068" fg:w="53234101"/><text x="63.8274%" y="239.50"></text></g><g><title>core::fmt::Formatter::pad_integral (16,161,685 samples, 0.12%)</title><rect x="63.8625%" y="213" width="0.1243%" height="15" fill="rgb(207,178,40)" fg:x="8302786484" fg:w="16161685"/><text x="64.1125%" y="223.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (4,092,845 samples, 0.03%)</title><rect x="63.9554%" y="197" width="0.0315%" height="15" fill="rgb(221,136,13)" fg:x="8314855324" fg:w="4092845"/><text x="64.2054%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (31,236,947 samples, 0.24%)</title><rect x="64.2511%" y="213" width="0.2403%" height="15" fill="rgb(249,199,10)" fg:x="8353304853" fg:w="31236947"/><text x="64.5011%" y="223.50"></text></g><g><title>[libc.so.6] (14,760,485 samples, 0.11%)</title><rect x="64.3778%" y="197" width="0.1135%" height="15" fill="rgb(249,222,13)" fg:x="8369781315" fg:w="14760485"/><text x="64.6278%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (3,682,043 samples, 0.03%)</title><rect x="64.6733%" y="197" width="0.0283%" height="15" fill="rgb(244,185,38)" fg:x="8408190880" fg:w="3682043"/><text x="64.9233%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3,729,324 samples, 0.03%)</title><rect x="64.7016%" y="197" width="0.0287%" height="15" fill="rgb(236,202,9)" fg:x="8411872923" fg:w="3729324"/><text x="64.9516%" y="207.50"></text></g><g><title>[libc.so.6] (1,480,845 samples, 0.01%)</title><rect x="64.7189%" y="181" width="0.0114%" height="15" fill="rgb(250,229,37)" fg:x="8414121402" fg:w="1480845"/><text x="64.9689%" y="191.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (269,985,630 samples, 2.08%)</title><rect x="62.6966%" y="261" width="2.0766%" height="15" fill="rgb(206,174,23)" fg:x="8151202715" fg:w="269985630"/><text x="62.9466%" y="271.50">&lt;..</text></g><g><title>core::fmt::write (268,477,837 samples, 2.07%)</title><rect x="62.7082%" y="245" width="2.0651%" height="15" fill="rgb(211,33,43)" fg:x="8152710508" fg:w="268477837"/><text x="62.9582%" y="255.50">c..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (102,240,176 samples, 0.79%)</title><rect x="63.9869%" y="229" width="0.7864%" height="15" fill="rgb(245,58,50)" fg:x="8318948169" fg:w="102240176"/><text x="64.2369%" y="239.50"></text></g><g><title>core::fmt::Formatter::pad_integral (36,646,545 samples, 0.28%)</title><rect x="64.4914%" y="213" width="0.2819%" height="15" fill="rgb(244,68,36)" fg:x="8384541800" fg:w="36646545"/><text x="64.7414%" y="223.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (5,586,098 samples, 0.04%)</title><rect x="64.7303%" y="197" width="0.0430%" height="15" fill="rgb(232,229,15)" fg:x="8415602247" fg:w="5586098"/><text x="64.9803%" y="207.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (14,112,409 samples, 0.11%)</title><rect x="65.6719%" y="245" width="0.1085%" height="15" fill="rgb(254,30,23)" fg:x="8538024402" fg:w="14112409"/><text x="65.9219%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (13,496,408 samples, 0.10%)</title><rect x="66.1035%" y="229" width="0.1038%" height="15" fill="rgb(235,160,14)" fg:x="8594132461" fg:w="13496408"/><text x="66.3535%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (91,660,260 samples, 0.71%)</title><rect x="66.2073%" y="229" width="0.7050%" height="15" fill="rgb(212,155,44)" fg:x="8607628869" fg:w="91660260"/><text x="66.4573%" y="239.50"></text></g><g><title>[libc.so.6] (53,086,298 samples, 0.41%)</title><rect x="66.5040%" y="213" width="0.4083%" height="15" fill="rgb(226,2,50)" fg:x="8646202831" fg:w="53086298"/><text x="66.7540%" y="223.50"></text></g><g><title>core::fmt::write (1,809,859,882 samples, 13.92%)</title><rect x="53.1170%" y="277" width="13.9209%" height="15" fill="rgb(234,177,6)" fg:x="6905752595" fg:w="1809859882"/><text x="53.3670%" y="287.50">core::fmt::write</text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (294,424,132 samples, 2.26%)</title><rect x="64.7733%" y="261" width="2.2646%" height="15" fill="rgb(217,24,9)" fg:x="8421188345" fg:w="294424132"/><text x="65.0233%" y="271.50">n..</text></g><g><title>core::fmt::write (163,475,666 samples, 1.26%)</title><rect x="65.7805%" y="245" width="1.2574%" height="15" fill="rgb(220,13,46)" fg:x="8552136811" fg:w="163475666"/><text x="66.0305%" y="255.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (16,323,348 samples, 0.13%)</title><rect x="66.9123%" y="229" width="0.1256%" height="15" fill="rgb(239,221,27)" fg:x="8699289129" fg:w="16323348"/><text x="67.1623%" y="239.50"></text></g><g><title>[[vdso]] (774,725,092 samples, 5.96%)</title><rect x="67.3932%" y="245" width="5.9590%" height="15" fill="rgb(222,198,25)" fg:x="8761809942" fg:w="774725092"/><text x="67.6432%" y="255.50">[[vdso]]</text></g><g><title>[unknown] (736,186,810 samples, 5.66%)</title><rect x="67.6896%" y="229" width="5.6625%" height="15" fill="rgb(211,99,13)" fg:x="8800348224" fg:w="736186810"/><text x="67.9396%" y="239.50">[unknow..</text></g><g><title>[unknown] (659,990,912 samples, 5.08%)</title><rect x="68.2757%" y="213" width="5.0765%" height="15" fill="rgb(232,111,31)" fg:x="8876544122" fg:w="659990912"/><text x="68.5257%" y="223.50">[unkno..</text></g><g><title>[unknown] (639,959,254 samples, 4.92%)</title><rect x="68.4298%" y="197" width="4.9224%" height="15" fill="rgb(245,82,37)" fg:x="8896575780" fg:w="639959254"/><text x="68.6798%" y="207.50">[unkno..</text></g><g><title>[unknown] (596,319,991 samples, 4.59%)</title><rect x="68.7655%" y="181" width="4.5867%" height="15" fill="rgb(227,149,46)" fg:x="8940215043" fg:w="596319991"/><text x="69.0155%" y="191.50">[unkn..</text></g><g><title>[unknown] (513,513,999 samples, 3.95%)</title><rect x="69.4024%" y="165" width="3.9498%" height="15" fill="rgb(218,36,50)" fg:x="9023021035" fg:w="513513999"/><text x="69.6524%" y="175.50">[unk..</text></g><g><title>[unknown] (494,544,268 samples, 3.80%)</title><rect x="69.5483%" y="149" width="3.8039%" height="15" fill="rgb(226,80,48)" fg:x="9041990766" fg:w="494544268"/><text x="69.7983%" y="159.50">[unk..</text></g><g><title>[unknown] (348,666,317 samples, 2.68%)</title><rect x="70.6703%" y="133" width="2.6818%" height="15" fill="rgb(238,224,15)" fg:x="9187868717" fg:w="348666317"/><text x="70.9203%" y="143.50">[u..</text></g><g><title>std::sys::pal::unix::time::Timespec::now (821,677,188 samples, 6.32%)</title><rect x="67.0379%" y="277" width="6.3201%" height="15" fill="rgb(241,136,10)" fg:x="8715612477" fg:w="821677188"/><text x="67.2879%" y="287.50">std::sys..</text></g><g><title>clock_gettime (818,890,622 samples, 6.30%)</title><rect x="67.0593%" y="261" width="6.2987%" height="15" fill="rgb(208,32,45)" fg:x="8718399043" fg:w="818890622"/><text x="67.3093%" y="271.50">clock_ge..</text></g><g><title>std::time::SystemTime::now (15,818,938 samples, 0.12%)</title><rect x="73.3580%" y="277" width="0.1217%" height="15" fill="rgb(207,135,9)" fg:x="9537289665" fg:w="15818938"/><text x="73.6080%" y="287.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (8,976,887 samples, 0.07%)</title><rect x="73.9897%" y="261" width="0.0690%" height="15" fill="rgb(206,86,44)" fg:x="9619414598" fg:w="8976887"/><text x="74.2397%" y="271.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (21,018,945 samples, 0.16%)</title><rect x="74.0587%" y="261" width="0.1617%" height="15" fill="rgb(245,177,15)" fg:x="9628391485" fg:w="21018945"/><text x="74.3087%" y="271.50"></text></g><g><title>&lt;str as tracing_core::field::Value&gt;::record (5,244,676 samples, 0.04%)</title><rect x="74.2204%" y="261" width="0.0403%" height="15" fill="rgb(206,64,50)" fg:x="9649410430" fg:w="5244676"/><text x="74.4704%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (7,458,359 samples, 0.06%)</title><rect x="74.6003%" y="245" width="0.0574%" height="15" fill="rgb(234,36,40)" fg:x="9698807254" fg:w="7458359"/><text x="74.8503%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (23,069,845 samples, 0.18%)</title><rect x="74.7645%" y="229" width="0.1774%" height="15" fill="rgb(213,64,8)" fg:x="9720155269" fg:w="23069845"/><text x="75.0145%" y="239.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Debug&gt;::fmt (3,863,241 samples, 0.03%)</title><rect x="74.9420%" y="229" width="0.0297%" height="15" fill="rgb(210,75,36)" fg:x="9743225114" fg:w="3863241"/><text x="75.1920%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15,929,429 samples, 0.12%)</title><rect x="75.0949%" y="213" width="0.1225%" height="15" fill="rgb(229,88,21)" fg:x="9763106850" fg:w="15929429"/><text x="75.3449%" y="223.50"></text></g><g><title>[libc.so.6] (6,408,389 samples, 0.05%)</title><rect x="75.1681%" y="197" width="0.0493%" height="15" fill="rgb(252,204,47)" fg:x="9772627890" fg:w="6408389"/><text x="75.4181%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11,016,161 samples, 0.08%)</title><rect x="75.4841%" y="197" width="0.0847%" height="15" fill="rgb(208,77,27)" fg:x="9813707283" fg:w="11016161"/><text x="75.7341%" y="207.50"></text></g><g><title>[libc.so.6] (4,168,263 samples, 0.03%)</title><rect x="75.5368%" y="181" width="0.0321%" height="15" fill="rgb(221,76,26)" fg:x="9820555181" fg:w="4168263"/><text x="75.7868%" y="191.50"></text></g><g><title>core::fmt::write (141,449,812 samples, 1.09%)</title><rect x="74.6656%" y="245" width="1.0880%" height="15" fill="rgb(225,139,18)" fg:x="9707290172" fg:w="141449812"/><text x="74.9156%" y="255.50"></text></g><g><title>core::fmt::write (101,651,629 samples, 0.78%)</title><rect x="74.9717%" y="229" width="0.7819%" height="15" fill="rgb(230,137,11)" fg:x="9747088355" fg:w="101651629"/><text x="75.2217%" y="239.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for usize&gt;::fmt (69,703,705 samples, 0.54%)</title><rect x="75.2174%" y="213" width="0.5361%" height="15" fill="rgb(212,28,1)" fg:x="9779036279" fg:w="69703705"/><text x="75.4674%" y="223.50"></text></g><g><title>core::fmt::Formatter::pad_integral (24,016,540 samples, 0.18%)</title><rect x="75.5688%" y="197" width="0.1847%" height="15" fill="rgb(248,164,17)" fg:x="9824723444" fg:w="24016540"/><text x="75.8188%" y="207.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (6,389,530 samples, 0.05%)</title><rect x="75.7044%" y="181" width="0.0491%" height="15" fill="rgb(222,171,42)" fg:x="9842350454" fg:w="6389530"/><text x="75.9544%" y="191.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (219,960,720 samples, 1.69%)</title><rect x="74.2607%" y="261" width="1.6919%" height="15" fill="rgb(243,84,45)" fg:x="9654655106" fg:w="219960720"/><text x="74.5107%" y="271.50"></text></g><g><title>tracing_core::field::Field::name (25,875,842 samples, 0.20%)</title><rect x="75.7536%" y="245" width="0.1990%" height="15" fill="rgb(252,49,23)" fg:x="9848739984" fg:w="25875842"/><text x="76.0036%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1,382,492 samples, 0.01%)</title><rect x="76.6656%" y="229" width="0.0106%" height="15" fill="rgb(215,19,7)" fg:x="9967318283" fg:w="1382492"/><text x="76.9156%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (12,586,467 samples, 0.10%)</title><rect x="76.6763%" y="229" width="0.0968%" height="15" fill="rgb(238,81,41)" fg:x="9968700775" fg:w="12586467"/><text x="76.9263%" y="239.50"></text></g><g><title>core::fmt::write (69,736,452 samples, 0.54%)</title><rect x="76.7731%" y="229" width="0.5364%" height="15" fill="rgb(210,199,37)" fg:x="9981287242" fg:w="69736452"/><text x="77.0231%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (39,256,376 samples, 0.30%)</title><rect x="77.0075%" y="213" width="0.3019%" height="15" fill="rgb(244,192,49)" fg:x="10011767318" fg:w="39256376"/><text x="77.2575%" y="223.50"></text></g><g><title>[libc.so.6] (18,265,709 samples, 0.14%)</title><rect x="77.1690%" y="197" width="0.1405%" height="15" fill="rgb(226,211,11)" fg:x="10032757985" fg:w="18265709"/><text x="77.4190%" y="207.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (164,192,423 samples, 1.26%)</title><rect x="76.2031%" y="245" width="1.2629%" height="15" fill="rgb(236,162,54)" fg:x="9907191918" fg:w="164192423"/><text x="76.4531%" y="255.50"></text></g><g><title>tracing_core::field::Field::name (20,360,647 samples, 0.16%)</title><rect x="77.3095%" y="229" width="0.1566%" height="15" fill="rgb(220,229,9)" fg:x="10051023694" fg:w="20360647"/><text x="77.5595%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_str (221,903,611 samples, 1.71%)</title><rect x="75.9526%" y="261" width="1.7068%" height="15" fill="rgb(250,87,22)" fg:x="9874615826" fg:w="221903611"/><text x="76.2026%" y="271.50"></text></g><g><title>tracing_core::field::Field::name (25,135,096 samples, 0.19%)</title><rect x="77.4661%" y="245" width="0.1933%" height="15" fill="rgb(239,43,17)" fg:x="10071384341" fg:w="25135096"/><text x="77.7161%" y="255.50"></text></g><g><title>&lt;u32 as tracing_core::field::Value&gt;::record (13,672,670 samples, 0.11%)</title><rect x="77.6594%" y="261" width="0.1052%" height="15" fill="rgb(231,177,25)" fg:x="10096519437" fg:w="13672670"/><text x="77.9094%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_fmt (3,068,736 samples, 0.02%)</title><rect x="78.0434%" y="229" width="0.0236%" height="15" fill="rgb(219,179,1)" fg:x="10146445123" fg:w="3068736"/><text x="78.2934%" y="239.50"></text></g><g><title>core::fmt::write (29,286,450 samples, 0.23%)</title><rect x="78.0670%" y="229" width="0.2253%" height="15" fill="rgb(238,219,53)" fg:x="10149513859" fg:w="29286450"/><text x="78.3170%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (13,320,767 samples, 0.10%)</title><rect x="78.1898%" y="213" width="0.1025%" height="15" fill="rgb(232,167,36)" fg:x="10165479542" fg:w="13320767"/><text x="78.4398%" y="223.50"></text></g><g><title>[libc.so.6] (3,338,060 samples, 0.03%)</title><rect x="78.2666%" y="197" width="0.0257%" height="15" fill="rgb(244,19,51)" fg:x="10175462249" fg:w="3338060"/><text x="78.5166%" y="207.50"></text></g><g><title>tracing_core::field::ValueSet::record (628,488,036 samples, 4.83%)</title><rect x="73.4796%" y="277" width="4.8341%" height="15" fill="rgb(224,6,22)" fg:x="9553108603" fg:w="628488036"/><text x="73.7296%" y="287.50">tracin..</text></g><g><title>tracing_core::field::Visit::record_u64 (70,786,281 samples, 0.54%)</title><rect x="77.7693%" y="261" width="0.5445%" height="15" fill="rgb(224,145,5)" fg:x="10110810358" fg:w="70786281"/><text x="78.0193%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (64,092,189 samples, 0.49%)</title><rect x="77.8208%" y="245" width="0.4930%" height="15" fill="rgb(234,130,49)" fg:x="10117504450" fg:w="64092189"/><text x="78.0708%" y="255.50"></text></g><g><title>tracing_core::field::Field::name (2,796,330 samples, 0.02%)</title><rect x="78.2923%" y="229" width="0.0215%" height="15" fill="rgb(254,6,2)" fg:x="10178800309" fg:w="2796330"/><text x="78.5423%" y="239.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (3,834,422,857 samples, 29.49%)</title><rect x="49.5705%" y="293" width="29.4932%" height="15" fill="rgb(208,96,46)" fg:x="6444678099" fg:w="3834422857"/><text x="49.8205%" y="303.50">&lt;tracing_subscriber::fmt::format::Format&lt;tracin..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::event_scope (97,504,317 samples, 0.75%)</title><rect x="78.3138%" y="277" width="0.7500%" height="15" fill="rgb(239,3,39)" fg:x="10181596639" fg:w="97504317"/><text x="78.5638%" y="287.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (67,789,754 samples, 0.52%)</title><rect x="78.5423%" y="261" width="0.5214%" height="15" fill="rgb(233,210,1)" fg:x="10211311202" fg:w="67789754"/><text x="78.7923%" y="271.50"></text></g><g><title>core::ops::function::FnOnce::call_once (28,363,428 samples, 0.22%)</title><rect x="79.0638%" y="293" width="0.2182%" height="15" fill="rgb(244,137,37)" fg:x="10279100956" fg:w="28363428"/><text x="79.3138%" y="303.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (6,977,255,049 samples, 53.67%)</title><rect x="26.1206%" y="325" width="53.6670%" height="15" fill="rgb(240,136,2)" fg:x="3395940447" fg:w="6977255049"/><text x="26.3706%" y="335.50">&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscribe..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,967,045,428 samples, 53.59%)</title><rect x="26.1991%" y="309" width="53.5884%" height="15" fill="rgb(239,18,37)" fg:x="3406150068" fg:w="6967045428"/><text x="26.4491%" y="319.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::io::stdio::stdout (65,731,112 samples, 0.51%)</title><rect x="79.2819%" y="293" width="0.5056%" height="15" fill="rgb(218,185,22)" fg:x="10307464384" fg:w="65731112"/><text x="79.5319%" y="303.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event_enabled (23,303,210 samples, 0.18%)</title><rect x="79.7875%" y="325" width="0.1792%" height="15" fill="rgb(225,218,4)" fg:x="10373195496" fg:w="23303210"/><text x="80.0375%" y="335.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (7,140,207,317 samples, 54.92%)</title><rect x="25.1574%" y="357" width="54.9203%" height="15" fill="rgb(230,182,32)" fg:x="3270725279" fg:w="7140207317"/><text x="25.4074%" y="367.50">&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log</text></g><g><title>tracing_log::dispatch_record::{{closure}} (7,073,062,728 samples, 54.40%)</title><rect x="25.6739%" y="341" width="54.4039%" height="15" fill="rgb(242,56,43)" fg:x="3337869868" fg:w="7073062728"/><text x="25.9239%" y="351.50">tracing_log::dispatch_record::{{closure}}</text></g><g><title>tracing_log::loglevel_to_cs (14,433,890 samples, 0.11%)</title><rect x="79.9668%" y="325" width="0.1110%" height="15" fill="rgb(233,99,24)" fg:x="10396498706" fg:w="14433890"/><text x="80.2168%" y="335.50"></text></g><g><title>[libc.so.6] (92,199,759 samples, 0.71%)</title><rect x="80.0778%" y="357" width="0.7092%" height="15" fill="rgb(234,209,42)" fg:x="10410932596" fg:w="92199759"/><text x="80.3278%" y="367.50"></text></g><g><title>__socket (812,037,426 samples, 6.25%)</title><rect x="80.9360%" y="341" width="6.2459%" height="15" fill="rgb(227,7,12)" fg:x="10522506207" fg:w="812037426"/><text x="81.1860%" y="351.50">__socket</text></g><g><title>[unknown] (799,219,312 samples, 6.15%)</title><rect x="81.0346%" y="325" width="6.1474%" height="15" fill="rgb(245,203,43)" fg:x="10535324321" fg:w="799219312"/><text x="81.2846%" y="335.50">[unknown]</text></g><g><title>[unknown] (724,079,878 samples, 5.57%)</title><rect x="81.6125%" y="309" width="5.5694%" height="15" fill="rgb(238,205,33)" fg:x="10610463755" fg:w="724079878"/><text x="81.8625%" y="319.50">[unknow..</text></g><g><title>[unknown] (696,156,374 samples, 5.35%)</title><rect x="81.8273%" y="293" width="5.3546%" height="15" fill="rgb(231,56,7)" fg:x="10638387259" fg:w="696156374"/><text x="82.0773%" y="303.50">[unknow..</text></g><g><title>[unknown] (666,871,416 samples, 5.13%)</title><rect x="82.0525%" y="277" width="5.1294%" height="15" fill="rgb(244,186,29)" fg:x="10667672217" fg:w="666871416"/><text x="82.3025%" y="287.50">[unkno..</text></g><g><title>[unknown] (659,559,025 samples, 5.07%)</title><rect x="82.1088%" y="261" width="5.0731%" height="15" fill="rgb(234,111,31)" fg:x="10674984608" fg:w="659559025"/><text x="82.3588%" y="271.50">[unkno..</text></g><g><title>[unknown] (592,318,391 samples, 4.56%)</title><rect x="82.6260%" y="245" width="4.5559%" height="15" fill="rgb(241,149,10)" fg:x="10742225242" fg:w="592318391"/><text x="82.8760%" y="255.50">[unkn..</text></g><g><title>[unknown] (506,801,190 samples, 3.90%)</title><rect x="83.2837%" y="229" width="3.8982%" height="15" fill="rgb(249,206,44)" fg:x="10827742443" fg:w="506801190"/><text x="83.5337%" y="239.50">[unk..</text></g><g><title>[unknown] (433,608,998 samples, 3.34%)</title><rect x="83.8467%" y="213" width="3.3352%" height="15" fill="rgb(251,153,30)" fg:x="10900934635" fg:w="433608998"/><text x="84.0967%" y="223.50">[un..</text></g><g><title>[unknown] (347,347,641 samples, 2.67%)</title><rect x="84.5102%" y="197" width="2.6717%" height="15" fill="rgb(239,152,38)" fg:x="10987195992" fg:w="347347641"/><text x="84.7602%" y="207.50">[u..</text></g><g><title>[unknown] (269,641,730 samples, 2.07%)</title><rect x="85.1079%" y="181" width="2.0740%" height="15" fill="rgb(249,139,47)" fg:x="11064901903" fg:w="269641730"/><text x="85.3579%" y="191.50">[..</text></g><g><title>[unknown] (253,434,498 samples, 1.95%)</title><rect x="85.2326%" y="165" width="1.9493%" height="15" fill="rgb(244,64,35)" fg:x="11081109135" fg:w="253434498"/><text x="85.4826%" y="175.50">[..</text></g><g><title>[unknown] (114,674,342 samples, 0.88%)</title><rect x="86.2999%" y="149" width="0.8820%" height="15" fill="rgb(216,46,15)" fg:x="11219869291" fg:w="114674342"/><text x="86.5499%" y="159.50"></text></g><g><title>[unknown] (51,711,993 samples, 0.40%)</title><rect x="86.7842%" y="133" width="0.3978%" height="15" fill="rgb(250,74,19)" fg:x="11282831640" fg:w="51711993"/><text x="87.0342%" y="143.50"></text></g><g><title>[unknown] (40,183,409 samples, 0.31%)</title><rect x="86.8728%" y="117" width="0.3091%" height="15" fill="rgb(249,42,33)" fg:x="11294360224" fg:w="40183409"/><text x="87.1228%" y="127.50"></text></g><g><title>[unknown] (26,465,678 samples, 0.20%)</title><rect x="86.9783%" y="101" width="0.2036%" height="15" fill="rgb(242,149,17)" fg:x="11308077955" fg:w="26465678"/><text x="87.2283%" y="111.50"></text></g><g><title>[unknown] (13,115,476 samples, 0.10%)</title><rect x="87.0810%" y="85" width="0.1009%" height="15" fill="rgb(244,29,21)" fg:x="11321428157" fg:w="13115476"/><text x="87.3310%" y="95.50"></text></g><g><title>mio::net::tcp::stream::TcpStream::connect (830,920,296 samples, 6.39%)</title><rect x="80.7921%" y="357" width="6.3912%" height="15" fill="rgb(220,130,37)" fg:x="10503808994" fg:w="830920296"/><text x="81.0421%" y="367.50">mio::net..</text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,362,488 samples, 0.01%)</title><rect x="87.2131%" y="277" width="0.0105%" height="15" fill="rgb(211,67,2)" fg:x="11338602417" fg:w="1362488"/><text x="87.4631%" y="287.50"></text></g><g><title>clock_gettime (1,362,488 samples, 0.01%)</title><rect x="87.2131%" y="261" width="0.0105%" height="15" fill="rgb(235,68,52)" fg:x="11338602417" fg:w="1362488"/><text x="87.4631%" y="271.50"></text></g><g><title>[[vdso]] (1,352,499 samples, 0.01%)</title><rect x="87.2132%" y="245" width="0.0104%" height="15" fill="rgb(246,142,3)" fg:x="11338612406" fg:w="1352499"/><text x="87.4632%" y="255.50"></text></g><g><title>[unknown] (1,345,908 samples, 0.01%)</title><rect x="87.2133%" y="229" width="0.0104%" height="15" fill="rgb(241,25,7)" fg:x="11338618997" fg:w="1345908"/><text x="87.4633%" y="239.50"></text></g><g><title>[unknown] (1,344,994 samples, 0.01%)</title><rect x="87.2133%" y="213" width="0.0103%" height="15" fill="rgb(242,119,39)" fg:x="11338619911" fg:w="1344994"/><text x="87.4633%" y="223.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (2,472,438 samples, 0.02%)</title><rect x="87.2047%" y="293" width="0.0190%" height="15" fill="rgb(241,98,45)" fg:x="11337501800" fg:w="2472438"/><text x="87.4547%" y="303.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::new (7,056,886 samples, 0.05%)</title><rect x="87.1912%" y="357" width="0.0543%" height="15" fill="rgb(254,28,30)" fg:x="11335746782" fg:w="7056886"/><text x="87.4412%" y="367.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (7,056,786 samples, 0.05%)</title><rect x="87.1912%" y="341" width="0.0543%" height="15" fill="rgb(241,142,54)" fg:x="11335746882" fg:w="7056786"/><text x="87.4412%" y="351.50"></text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle (7,056,729 samples, 0.05%)</title><rect x="87.1912%" y="325" width="0.0543%" height="15" fill="rgb(222,85,15)" fg:x="11335746939" fg:w="7056729"/><text x="87.4412%" y="335.50"></text></g><g><title>tokio::runtime::io::driver::Handle::add_source (7,056,715 samples, 0.05%)</title><rect x="87.1912%" y="309" width="0.0543%" height="15" fill="rgb(210,85,47)" fg:x="11335746953" fg:w="7056715"/><text x="87.4412%" y="319.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::allocate (2,662,215 samples, 0.02%)</title><rect x="87.2250%" y="293" width="0.0205%" height="15" fill="rgb(224,206,25)" fg:x="11340141453" fg:w="2662215"/><text x="87.4750%" y="303.50"></text></g><g><title>__rustc::__rdl_alloc (1,623,701 samples, 0.01%)</title><rect x="87.2330%" y="277" width="0.0125%" height="15" fill="rgb(243,201,19)" fg:x="11341179967" fg:w="1623701"/><text x="87.4830%" y="287.50"></text></g><g><title>posix_memalign (1,622,490 samples, 0.01%)</title><rect x="87.2330%" y="261" width="0.0125%" height="15" fill="rgb(236,59,4)" fg:x="11341181178" fg:w="1622490"/><text x="87.4830%" y="271.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (31,531,608 samples, 0.24%)</title><rect x="87.9539%" y="309" width="0.2425%" height="15" fill="rgb(254,179,45)" fg:x="11434912092" fg:w="31531608"/><text x="88.2039%" y="319.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (310,102,153 samples, 2.39%)</title><rect x="88.1964%" y="309" width="2.3852%" height="15" fill="rgb(226,14,10)" fg:x="11466443700" fg:w="310102153"/><text x="88.4464%" y="319.50">st..</text></g><g><title>clock_gettime (309,305,070 samples, 2.38%)</title><rect x="88.2026%" y="293" width="2.3791%" height="15" fill="rgb(244,27,41)" fg:x="11467240783" fg:w="309305070"/><text x="88.4526%" y="303.50">cl..</text></g><g><title>[[vdso]] (298,480,635 samples, 2.30%)</title><rect x="88.2858%" y="277" width="2.2958%" height="15" fill="rgb(235,35,32)" fg:x="11478065218" fg:w="298480635"/><text x="88.5358%" y="287.50">[..</text></g><g><title>[unknown] (286,391,591 samples, 2.20%)</title><rect x="88.3788%" y="261" width="2.2028%" height="15" fill="rgb(218,68,31)" fg:x="11490154262" fg:w="286391591"/><text x="88.6288%" y="271.50">[..</text></g><g><title>[unknown] (257,115,306 samples, 1.98%)</title><rect x="88.6040%" y="245" width="1.9777%" height="15" fill="rgb(207,120,37)" fg:x="11519430547" fg:w="257115306"/><text x="88.8540%" y="255.50">[..</text></g><g><title>[unknown] (248,300,419 samples, 1.91%)</title><rect x="88.6718%" y="229" width="1.9099%" height="15" fill="rgb(227,98,0)" fg:x="11528245434" fg:w="248300419"/><text x="88.9218%" y="239.50">[..</text></g><g><title>[unknown] (240,290,934 samples, 1.85%)</title><rect x="88.7334%" y="213" width="1.8482%" height="15" fill="rgb(207,7,3)" fg:x="11536254919" fg:w="240290934"/><text x="88.9834%" y="223.50">[..</text></g><g><title>[unknown] (208,862,656 samples, 1.61%)</title><rect x="88.9752%" y="197" width="1.6065%" height="15" fill="rgb(206,98,19)" fg:x="11567683197" fg:w="208862656"/><text x="89.2252%" y="207.50"></text></g><g><title>[unknown] (191,025,642 samples, 1.47%)</title><rect x="89.1123%" y="181" width="1.4693%" height="15" fill="rgb(217,5,26)" fg:x="11585520211" fg:w="191025642"/><text x="89.3623%" y="191.50"></text></g><g><title>[unknown] (142,678,601 samples, 1.10%)</title><rect x="89.4842%" y="165" width="1.0974%" height="15" fill="rgb(235,190,38)" fg:x="11633867252" fg:w="142678601"/><text x="89.7342%" y="175.50"></text></g><g><title>std::time::Instant::now (3,514,972 samples, 0.03%)</title><rect x="90.5817%" y="309" width="0.0270%" height="15" fill="rgb(247,86,24)" fg:x="11776545853" fg:w="3514972"/><text x="90.8317%" y="319.50"></text></g><g><title>stress_test::main::{{closure}}::{{closure}} (8,948,130,432 samples, 68.83%)</title><rect x="22.2781%" y="373" width="68.8263%" height="15" fill="rgb(205,101,16)" fg:x="2896383058" fg:w="8948130432"/><text x="22.5281%" y="383.50">stress_test::main::{{closure}}::{{closure}}</text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (501,067,216 samples, 3.85%)</title><rect x="87.2504%" y="357" width="3.8541%" height="15" fill="rgb(246,168,33)" fg:x="11343446274" fg:w="501067216"/><text x="87.5004%" y="367.50">toki..</text></g><g><title>tokio::runtime::park::wake (467,021,232 samples, 3.59%)</title><rect x="87.5123%" y="341" width="3.5922%" height="15" fill="rgb(231,114,1)" fg:x="11377492258" fg:w="467021232"/><text x="87.7623%" y="351.50">toki..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (449,398,080 samples, 3.46%)</title><rect x="87.6478%" y="325" width="3.4566%" height="15" fill="rgb(207,184,53)" fg:x="11395115410" fg:w="449398080"/><text x="87.8978%" y="335.50">par..</text></g><g><title>syscall (64,452,665 samples, 0.50%)</title><rect x="90.6087%" y="309" width="0.4958%" height="15" fill="rgb(224,95,51)" fg:x="11780060825" fg:w="64452665"/><text x="90.8587%" y="319.50"></text></g><g><title>[unknown] (64,452,665 samples, 0.50%)</title><rect x="90.6087%" y="293" width="0.4958%" height="15" fill="rgb(212,188,45)" fg:x="11780060825" fg:w="64452665"/><text x="90.8587%" y="303.50"></text></g><g><title>[unknown] (49,143,313 samples, 0.38%)</title><rect x="90.7265%" y="277" width="0.3780%" height="15" fill="rgb(223,154,38)" fg:x="11795370177" fg:w="49143313"/><text x="90.9765%" y="287.50"></text></g><g><title>[unknown] (49,143,313 samples, 0.38%)</title><rect x="90.7265%" y="261" width="0.3780%" height="15" fill="rgb(251,22,52)" fg:x="11795370177" fg:w="49143313"/><text x="90.9765%" y="271.50"></text></g><g><title>[unknown] (49,143,313 samples, 0.38%)</title><rect x="90.7265%" y="245" width="0.3780%" height="15" fill="rgb(229,209,22)" fg:x="11795370177" fg:w="49143313"/><text x="90.9765%" y="255.50"></text></g><g><title>[unknown] (49,143,313 samples, 0.38%)</title><rect x="90.7265%" y="229" width="0.3780%" height="15" fill="rgb(234,138,34)" fg:x="11795370177" fg:w="49143313"/><text x="90.9765%" y="239.50"></text></g><g><title>[unknown] (49,143,313 samples, 0.38%)</title><rect x="90.7265%" y="213" width="0.3780%" height="15" fill="rgb(212,95,11)" fg:x="11795370177" fg:w="49143313"/><text x="90.9765%" y="223.50"></text></g><g><title>[unknown] (41,652,153 samples, 0.32%)</title><rect x="90.7841%" y="197" width="0.3204%" height="15" fill="rgb(240,179,47)" fg:x="11802861337" fg:w="41652153"/><text x="91.0341%" y="207.50"></text></g><g><title>[unknown] (21,346,892 samples, 0.16%)</title><rect x="90.9403%" y="181" width="0.1642%" height="15" fill="rgb(240,163,11)" fg:x="11823166598" fg:w="21346892"/><text x="91.1903%" y="191.50"></text></g><g><title>[unknown] (12,066,625 samples, 0.09%)</title><rect x="91.0116%" y="165" width="0.0928%" height="15" fill="rgb(236,37,12)" fg:x="11832446865" fg:w="12066625"/><text x="91.2616%" y="175.50"></text></g><g><title>[unknown] (4,486,905 samples, 0.03%)</title><rect x="91.0699%" y="149" width="0.0345%" height="15" fill="rgb(232,164,16)" fg:x="11840026585" fg:w="4486905"/><text x="91.3199%" y="159.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2,152,898 samples, 0.02%)</title><rect x="91.1390%" y="357" width="0.0166%" height="15" fill="rgb(244,205,15)" fg:x="11849000980" fg:w="2152898"/><text x="91.3890%" y="367.50"></text></g><g><title>[libc.so.6] (66,025,829 samples, 0.51%)</title><rect x="91.1555%" y="357" width="0.5079%" height="15" fill="rgb(223,117,47)" fg:x="11851153878" fg:w="66025829"/><text x="91.4055%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;stress_test::main::{{closure}}::{{closure}}&gt; (4,368,992 samples, 0.03%)</title><rect x="91.6634%" y="357" width="0.0336%" height="15" fill="rgb(244,107,35)" fg:x="11917179707" fg:w="4368992"/><text x="91.9134%" y="367.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (88,180,222 samples, 0.68%)</title><rect x="91.1044%" y="373" width="0.6783%" height="15" fill="rgb(205,140,8)" fg:x="11844513490" fg:w="88180222"/><text x="91.3544%" y="383.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (11,145,013 samples, 0.09%)</title><rect x="91.6970%" y="357" width="0.0857%" height="15" fill="rgb(228,84,46)" fg:x="11921548699" fg:w="11145013"/><text x="91.9470%" y="367.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (9,079,196,290 samples, 69.83%)</title><rect x="22.0275%" y="389" width="69.8345%" height="15" fill="rgb(254,188,9)" fg:x="2863801243" fg:w="9079196290"/><text x="22.2775%" y="399.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (10,303,821 samples, 0.08%)</title><rect x="91.7827%" y="373" width="0.0793%" height="15" fill="rgb(206,112,54)" fg:x="11932693712" fg:w="10303821"/><text x="92.0327%" y="383.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (5,148,828 samples, 0.04%)</title><rect x="91.9015%" y="373" width="0.0396%" height="15" fill="rgb(216,84,49)" fg:x="11948139080" fg:w="5148828"/><text x="92.1515%" y="383.50"></text></g><g><title>[libc.so.6] (69,200,374 samples, 0.53%)</title><rect x="91.9411%" y="373" width="0.5323%" height="15" fill="rgb(214,194,35)" fg:x="11953287908" fg:w="69200374"/><text x="92.1911%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (82,002,834 samples, 0.63%)</title><rect x="91.8620%" y="389" width="0.6307%" height="15" fill="rgb(249,28,3)" fg:x="11942997533" fg:w="82002834"/><text x="92.1120%" y="399.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2,512,085 samples, 0.02%)</title><rect x="92.4734%" y="373" width="0.0193%" height="15" fill="rgb(222,56,52)" fg:x="12022488282" fg:w="2512085"/><text x="92.7234%" y="383.50"></text></g><g><title>__rustc::__rdl_dealloc (2,916,340 samples, 0.02%)</title><rect x="92.6152%" y="373" width="0.0224%" height="15" fill="rgb(245,217,50)" fg:x="12040925450" fg:w="2916340"/><text x="92.8652%" y="383.50"></text></g><g><title>[libc.so.6] (119,105,285 samples, 0.92%)</title><rect x="94.0487%" y="341" width="0.9161%" height="15" fill="rgb(213,201,24)" fg:x="12227293662" fg:w="119105285"/><text x="94.2987%" y="351.50"></text></g><g><title>[libc.so.6] (306,323,448 samples, 2.36%)</title><rect x="92.8906%" y="357" width="2.3561%" height="15" fill="rgb(248,116,28)" fg:x="12076733504" fg:w="306323448"/><text x="93.1406%" y="367.50">[..</text></g><g><title>__lll_lock_wait_private (36,657,624 samples, 0.28%)</title><rect x="94.9648%" y="341" width="0.2820%" height="15" fill="rgb(219,72,43)" fg:x="12346399328" fg:w="36657624"/><text x="95.2148%" y="351.50"></text></g><g><title>[unknown] (30,388,081 samples, 0.23%)</title><rect x="95.0130%" y="325" width="0.2337%" height="15" fill="rgb(209,138,14)" fg:x="12352668871" fg:w="30388081"/><text x="95.2630%" y="335.50"></text></g><g><title>[unknown] (27,442,636 samples, 0.21%)</title><rect x="95.0357%" y="309" width="0.2111%" height="15" fill="rgb(222,18,33)" fg:x="12355614316" fg:w="27442636"/><text x="95.2857%" y="319.50"></text></g><g><title>[unknown] (26,738,215 samples, 0.21%)</title><rect x="95.0411%" y="293" width="0.2057%" height="15" fill="rgb(213,199,7)" fg:x="12356318737" fg:w="26738215"/><text x="95.2911%" y="303.50"></text></g><g><title>[unknown] (25,341,231 samples, 0.19%)</title><rect x="95.0518%" y="277" width="0.1949%" height="15" fill="rgb(250,110,10)" fg:x="12357715721" fg:w="25341231"/><text x="95.3018%" y="287.50"></text></g><g><title>[unknown] (24,400,341 samples, 0.19%)</title><rect x="95.0591%" y="261" width="0.1877%" height="15" fill="rgb(248,123,6)" fg:x="12358656611" fg:w="24400341"/><text x="95.3091%" y="271.50"></text></g><g><title>[unknown] (22,755,474 samples, 0.18%)</title><rect x="95.0717%" y="245" width="0.1750%" height="15" fill="rgb(206,91,31)" fg:x="12360301478" fg:w="22755474"/><text x="95.3217%" y="255.50"></text></g><g><title>[unknown] (17,679,075 samples, 0.14%)</title><rect x="95.1108%" y="229" width="0.1360%" height="15" fill="rgb(211,154,13)" fg:x="12365377877" fg:w="17679075"/><text x="95.3608%" y="239.50"></text></g><g><title>[unknown] (16,178,364 samples, 0.12%)</title><rect x="95.1223%" y="213" width="0.1244%" height="15" fill="rgb(225,148,7)" fg:x="12366878588" fg:w="16178364"/><text x="95.3723%" y="223.50"></text></g><g><title>[unknown] (13,883,186 samples, 0.11%)</title><rect x="95.1400%" y="197" width="0.1068%" height="15" fill="rgb(220,160,43)" fg:x="12369173766" fg:w="13883186"/><text x="95.3900%" y="207.50"></text></g><g><title>cfree (364,571,344 samples, 2.80%)</title><rect x="92.6440%" y="373" width="2.8042%" height="15" fill="rgb(213,52,39)" fg:x="12044665372" fg:w="364571344"/><text x="92.8940%" y="383.50">cf..</text></g><g><title>__lll_lock_wake_private (26,179,764 samples, 0.20%)</title><rect x="95.2468%" y="357" width="0.2014%" height="15" fill="rgb(243,137,7)" fg:x="12383056952" fg:w="26179764"/><text x="95.4968%" y="367.50"></text></g><g><title>[unknown] (24,776,198 samples, 0.19%)</title><rect x="95.2576%" y="341" width="0.1906%" height="15" fill="rgb(230,79,13)" fg:x="12384460518" fg:w="24776198"/><text x="95.5076%" y="351.50"></text></g><g><title>[unknown] (20,576,638 samples, 0.16%)</title><rect x="95.2899%" y="325" width="0.1583%" height="15" fill="rgb(247,105,23)" fg:x="12388660078" fg:w="20576638"/><text x="95.5399%" y="335.50"></text></g><g><title>[unknown] (15,562,495 samples, 0.12%)</title><rect x="95.3284%" y="309" width="0.1197%" height="15" fill="rgb(223,179,41)" fg:x="12393674221" fg:w="15562495"/><text x="95.5784%" y="319.50"></text></g><g><title>[unknown] (13,769,786 samples, 0.11%)</title><rect x="95.3422%" y="293" width="0.1059%" height="15" fill="rgb(218,9,34)" fg:x="12395466930" fg:w="13769786"/><text x="95.5922%" y="303.50"></text></g><g><title>[unknown] (8,956,042 samples, 0.07%)</title><rect x="95.3792%" y="277" width="0.0689%" height="15" fill="rgb(222,106,8)" fg:x="12400280674" fg:w="8956042"/><text x="95.6292%" y="287.50"></text></g><g><title>[unknown] (7,244,874 samples, 0.06%)</title><rect x="95.3924%" y="261" width="0.0557%" height="15" fill="rgb(211,220,0)" fg:x="12401991842" fg:w="7244874"/><text x="95.6424%" y="271.50"></text></g><g><title>[unknown] (2,358,478 samples, 0.02%)</title><rect x="95.4300%" y="245" width="0.0181%" height="15" fill="rgb(229,52,16)" fg:x="12406878238" fg:w="2358478"/><text x="95.6800%" y="255.50"></text></g><g><title>[unknown] (1,938,466 samples, 0.01%)</title><rect x="95.4332%" y="229" width="0.0149%" height="15" fill="rgb(212,155,18)" fg:x="12407298250" fg:w="1938466"/><text x="95.6832%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;stress_test::main::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (34,853,947 samples, 0.27%)</title><rect x="95.4481%" y="373" width="0.2681%" height="15" fill="rgb(242,21,14)" fg:x="12409236716" fg:w="34853947"/><text x="95.6981%" y="383.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,574,797 samples, 0.01%)</title><rect x="95.7162%" y="261" width="0.0121%" height="15" fill="rgb(222,19,48)" fg:x="12444090663" fg:w="1574797"/><text x="95.9662%" y="271.50"></text></g><g><title>write (1,574,797 samples, 0.01%)</title><rect x="95.7162%" y="245" width="0.0121%" height="15" fill="rgb(232,45,27)" fg:x="12444090663" fg:w="1574797"/><text x="95.9662%" y="255.50"></text></g><g><title>[unknown] (1,574,797 samples, 0.01%)</title><rect x="95.7162%" y="229" width="0.0121%" height="15" fill="rgb(249,103,42)" fg:x="12444090663" fg:w="1574797"/><text x="95.9662%" y="239.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (6,911,332 samples, 0.05%)</title><rect x="95.7162%" y="357" width="0.0532%" height="15" fill="rgb(246,81,33)" fg:x="12444090663" fg:w="6911332"/><text x="95.9662%" y="367.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} (6,911,332 samples, 0.05%)</title><rect x="95.7162%" y="341" width="0.0532%" height="15" fill="rgb(252,33,42)" fg:x="12444090663" fg:w="6911332"/><text x="95.9662%" y="351.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (6,911,332 samples, 0.05%)</title><rect x="95.7162%" y="325" width="0.0532%" height="15" fill="rgb(209,212,41)" fg:x="12444090663" fg:w="6911332"/><text x="95.9662%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,911,332 samples, 0.05%)</title><rect x="95.7162%" y="309" width="0.0532%" height="15" fill="rgb(207,154,6)" fg:x="12444090663" fg:w="6911332"/><text x="95.9662%" y="319.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (6,911,332 samples, 0.05%)</title><rect x="95.7162%" y="293" width="0.0532%" height="15" fill="rgb(223,64,47)" fg:x="12444090663" fg:w="6911332"/><text x="95.9662%" y="303.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (6,911,332 samples, 0.05%)</title><rect x="95.7162%" y="277" width="0.0532%" height="15" fill="rgb(211,161,38)" fg:x="12444090663" fg:w="6911332"/><text x="95.9662%" y="287.50"></text></g><g><title>syscall (5,336,535 samples, 0.04%)</title><rect x="95.7283%" y="261" width="0.0410%" height="15" fill="rgb(219,138,40)" fg:x="12445665460" fg:w="5336535"/><text x="95.9783%" y="271.50"></text></g><g><title>[unknown] (5,336,535 samples, 0.04%)</title><rect x="95.7283%" y="245" width="0.0410%" height="15" fill="rgb(241,228,46)" fg:x="12445665460" fg:w="5336535"/><text x="95.9783%" y="255.50"></text></g><g><title>stress_test::main::{{closure}}::{{closure}} (9,710,406 samples, 0.07%)</title><rect x="95.7162%" y="373" width="0.0747%" height="15" fill="rgb(223,209,38)" fg:x="12444090663" fg:w="9710406"/><text x="95.9662%" y="383.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (2,799,074 samples, 0.02%)</title><rect x="95.7694%" y="357" width="0.0215%" height="15" fill="rgb(236,164,45)" fg:x="12451001995" fg:w="2799074"/><text x="96.0194%" y="367.50"></text></g><g><title>tokio::runtime::park::wake (2,799,074 samples, 0.02%)</title><rect x="95.7694%" y="341" width="0.0215%" height="15" fill="rgb(231,15,5)" fg:x="12451001995" fg:w="2799074"/><text x="96.0194%" y="351.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (2,799,074 samples, 0.02%)</title><rect x="95.7694%" y="325" width="0.0215%" height="15" fill="rgb(252,35,15)" fg:x="12451001995" fg:w="2799074"/><text x="96.0194%" y="335.50"></text></g><g><title>syscall (2,799,074 samples, 0.02%)</title><rect x="95.7694%" y="309" width="0.0215%" height="15" fill="rgb(248,181,18)" fg:x="12451001995" fg:w="2799074"/><text x="96.0194%" y="319.50"></text></g><g><title>[unknown] (2,799,074 samples, 0.02%)</title><rect x="95.7694%" y="293" width="0.0215%" height="15" fill="rgb(233,39,42)" fg:x="12451001995" fg:w="2799074"/><text x="96.0194%" y="303.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (90,930,161 samples, 0.70%)</title><rect x="95.7909%" y="373" width="0.6994%" height="15" fill="rgb(238,110,33)" fg:x="12453801069" fg:w="90930161"/><text x="96.0409%" y="383.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (10,762,449 samples, 0.08%)</title><rect x="96.5969%" y="357" width="0.0828%" height="15" fill="rgb(233,195,10)" fg:x="12558586849" fg:w="10762449"/><text x="96.8469%" y="367.50"></text></g><g><title>[libc.so.6] (25,433,787 samples, 0.20%)</title><rect x="96.6797%" y="357" width="0.1956%" height="15" fill="rgb(254,105,3)" fg:x="12569349298" fg:w="25433787"/><text x="96.9297%" y="367.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (53,405,162 samples, 0.41%)</title><rect x="96.4903%" y="373" width="0.4108%" height="15" fill="rgb(221,225,9)" fg:x="12544731230" fg:w="53405162"/><text x="96.7403%" y="383.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (3,353,307 samples, 0.03%)</title><rect x="96.8753%" y="357" width="0.0258%" height="15" fill="rgb(224,227,45)" fg:x="12594783085" fg:w="3353307"/><text x="97.1253%" y="367.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (24,590,825 samples, 0.19%)</title><rect x="96.9011%" y="373" width="0.1891%" height="15" fill="rgb(229,198,43)" fg:x="12598136392" fg:w="24590825"/><text x="97.1511%" y="383.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (16,268,944 samples, 0.13%)</title><rect x="97.0902%" y="373" width="0.1251%" height="15" fill="rgb(206,209,35)" fg:x="12622727217" fg:w="16268944"/><text x="97.3402%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (807,166,330 samples, 6.21%)</title><rect x="92.4927%" y="389" width="6.2085%" height="15" fill="rgb(245,195,53)" fg:x="12025000367" fg:w="807166330"/><text x="92.7427%" y="399.50">tokio::r..</text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (193,170,536 samples, 1.49%)</title><rect x="97.2154%" y="373" width="1.4858%" height="15" fill="rgb(240,92,26)" fg:x="12638996161" fg:w="193170536"/><text x="97.4654%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (10,064,768,465 samples, 77.42%)</title><rect x="21.4605%" y="405" width="77.4152%" height="15" fill="rgb(207,40,23)" fg:x="2790089408" fg:w="10064768465"/><text x="21.7105%" y="415.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (22,691,176 samples, 0.17%)</title><rect x="98.7012%" y="389" width="0.1745%" height="15" fill="rgb(223,111,35)" fg:x="12832166697" fg:w="22691176"/><text x="98.9512%" y="399.50"></text></g><g><title>[libc.so.6] (10,560,274,432 samples, 81.23%)</title><rect x="17.6540%" y="629" width="81.2265%" height="15" fill="rgb(229,147,28)" fg:x="2295207002" fg:w="10560274432"/><text x="17.9040%" y="639.50">[libc.so.6]</text></g><g><title>[libc.so.6] (10,560,274,432 samples, 81.23%)</title><rect x="17.6540%" y="613" width="81.2265%" height="15" fill="rgb(211,29,28)" fg:x="2295207002" fg:w="10560274432"/><text x="17.9040%" y="623.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (10,560,274,432 samples, 81.23%)</title><rect x="17.6540%" y="597" width="81.2265%" height="15" fill="rgb(228,72,33)" fg:x="2295207002" fg:w="10560274432"/><text x="17.9040%" y="607.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10,560,274,432 samples, 81.23%)</title><rect x="17.6540%" y="581" width="81.2265%" height="15" fill="rgb(205,214,31)" fg:x="2295207002" fg:w="10560274432"/><text x="17.9040%" y="591.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (10,560,274,432 samples, 81.23%)</title><rect x="17.6540%" y="565" width="81.2265%" height="15" fill="rgb(224,111,15)" fg:x="2295207002" fg:w="10560274432"/><text x="17.9040%" y="575.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (10,560,274,432 samples, 81.23%)</title><rect x="17.6540%" y="549" width="81.2265%" height="15" fill="rgb(253,21,26)" fg:x="2295207002" fg:w="10560274432"/><text x="17.9040%" y="559.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (10,560,274,409 samples, 81.23%)</title><rect x="17.6540%" y="533" width="81.2265%" height="15" fill="rgb(245,139,43)" fg:x="2295207025" fg:w="10560274409"/><text x="17.9040%" y="543.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (10,560,274,409 samples, 81.23%)</title><rect x="17.6540%" y="517" width="81.2265%" height="15" fill="rgb(252,170,7)" fg:x="2295207025" fg:w="10560274409"/><text x="17.9040%" y="527.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (10,560,274,409 samples, 81.23%)</title><rect x="17.6540%" y="501" width="81.2265%" height="15" fill="rgb(231,118,14)" fg:x="2295207025" fg:w="10560274409"/><text x="17.9040%" y="511.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (10,560,274,409 samples, 81.23%)</title><rect x="17.6540%" y="485" width="81.2265%" height="15" fill="rgb(238,83,0)" fg:x="2295207025" fg:w="10560274409"/><text x="17.9040%" y="495.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (10,560,274,029 samples, 81.23%)</title><rect x="17.6540%" y="469" width="81.2265%" height="15" fill="rgb(221,39,39)" fg:x="2295207405" fg:w="10560274029"/><text x="17.9040%" y="479.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (10,560,267,110 samples, 81.23%)</title><rect x="17.6541%" y="453" width="81.2264%" height="15" fill="rgb(222,119,46)" fg:x="2295214324" fg:w="10560267110"/><text x="17.9041%" y="463.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (10,560,267,110 samples, 81.23%)</title><rect x="17.6541%" y="437" width="81.2264%" height="15" fill="rgb(222,165,49)" fg:x="2295214324" fg:w="10560267110"/><text x="17.9041%" y="447.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (10,238,277,611 samples, 78.75%)</title><rect x="20.1307%" y="421" width="78.7498%" height="15" fill="rgb(219,113,52)" fg:x="2617203823" fg:w="10238277611"/><text x="20.3807%" y="431.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4,428,675 samples, 0.03%)</title><rect x="99.2185%" y="597" width="0.0341%" height="15" fill="rgb(214,7,15)" fg:x="12899422444" fg:w="4428675"/><text x="99.4685%" y="607.50"></text></g><g><title>write (4,428,675 samples, 0.03%)</title><rect x="99.2185%" y="581" width="0.0341%" height="15" fill="rgb(235,32,4)" fg:x="12899422444" fg:w="4428675"/><text x="99.4685%" y="591.50"></text></g><g><title>[unknown] (4,428,675 samples, 0.03%)</title><rect x="99.2185%" y="565" width="0.0341%" height="15" fill="rgb(238,90,54)" fg:x="12899422444" fg:w="4428675"/><text x="99.4685%" y="575.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (13,916,294 samples, 0.11%)</title><rect x="99.2185%" y="613" width="0.1070%" height="15" fill="rgb(213,208,19)" fg:x="12899422444" fg:w="13916294"/><text x="99.4685%" y="623.50"></text></g><g><title>syscall (9,487,619 samples, 0.07%)</title><rect x="99.2526%" y="597" width="0.0730%" height="15" fill="rgb(233,156,4)" fg:x="12903851119" fg:w="9487619"/><text x="99.5026%" y="607.50"></text></g><g><title>[unknown] (9,487,619 samples, 0.07%)</title><rect x="99.2526%" y="581" width="0.0730%" height="15" fill="rgb(207,194,5)" fg:x="12903851119" fg:w="9487619"/><text x="99.5026%" y="591.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3,498,319 samples, 0.03%)</title><rect x="99.3255%" y="613" width="0.0269%" height="15" fill="rgb(206,111,30)" fg:x="12913338738" fg:w="3498319"/><text x="99.5755%" y="623.50"></text></g><g><title>write (3,498,319 samples, 0.03%)</title><rect x="99.3255%" y="597" width="0.0269%" height="15" fill="rgb(243,70,54)" fg:x="12913338738" fg:w="3498319"/><text x="99.5755%" y="607.50"></text></g><g><title>[unknown] (3,498,319 samples, 0.03%)</title><rect x="99.3255%" y="581" width="0.0269%" height="15" fill="rgb(242,28,8)" fg:x="12913338738" fg:w="3498319"/><text x="99.5755%" y="591.50"></text></g><g><title>[[vdso]] (1,533,919 samples, 0.01%)</title><rect x="99.3524%" y="613" width="0.0118%" height="15" fill="rgb(219,106,18)" fg:x="12916837057" fg:w="1533919"/><text x="99.6024%" y="623.50"></text></g><g><title>[unknown] (1,533,919 samples, 0.01%)</title><rect x="99.3524%" y="597" width="0.0118%" height="15" fill="rgb(244,222,10)" fg:x="12916837057" fg:w="1533919"/><text x="99.6024%" y="607.50"></text></g><g><title>__socket (67,060,545 samples, 0.52%)</title><rect x="99.3642%" y="613" width="0.5158%" height="15" fill="rgb(236,179,52)" fg:x="12918370976" fg:w="67060545"/><text x="99.6142%" y="623.50"></text></g><g><title>[unknown] (67,060,545 samples, 0.52%)</title><rect x="99.3642%" y="597" width="0.5158%" height="15" fill="rgb(213,23,39)" fg:x="12918370976" fg:w="67060545"/><text x="99.6142%" y="607.50"></text></g><g><title>[unknown] (131,726,837 samples, 1.01%)</title><rect x="98.8805%" y="629" width="1.0132%" height="15" fill="rgb(238,48,10)" fg:x="12855481434" fg:w="131726837"/><text x="99.1305%" y="639.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (1,776,750 samples, 0.01%)</title><rect x="99.8800%" y="613" width="0.0137%" height="15" fill="rgb(251,196,23)" fg:x="12985431521" fg:w="1776750"/><text x="100.1300%" y="623.50"></text></g><g><title>syscall (1,776,750 samples, 0.01%)</title><rect x="99.8800%" y="597" width="0.0137%" height="15" fill="rgb(250,152,24)" fg:x="12985431521" fg:w="1776750"/><text x="100.1300%" y="607.50"></text></g><g><title>[unknown] (1,776,750 samples, 0.01%)</title><rect x="99.8800%" y="581" width="0.0137%" height="15" fill="rgb(209,150,17)" fg:x="12985431521" fg:w="1776750"/><text x="100.1300%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2,234,178 samples, 0.02%)</title><rect x="99.8978%" y="613" width="0.0172%" height="15" fill="rgb(234,202,34)" fg:x="12987734879" fg:w="2234178"/><text x="100.1478%" y="623.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (6,281,577 samples, 0.05%)</title><rect x="99.9173%" y="613" width="0.0483%" height="15" fill="rgb(253,148,53)" fg:x="12990275407" fg:w="6281577"/><text x="100.1673%" y="623.50"></text></g><g><title>all (13,001,026,771 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(218,129,16)" fg:x="0" fg:w="13001026771"/><text x="0.2500%" y="671.50"></text></g><g><title>tokio-runtime-w (10,793,473,262 samples, 83.02%)</title><rect x="16.9798%" y="645" width="83.0202%" height="15" fill="rgb(216,85,19)" fg:x="2207553509" fg:w="10793473262"/><text x="17.2298%" y="655.50">tokio-runtime-w</text></g><g><title>core::fmt::write (13,291,892 samples, 0.10%)</title><rect x="99.8978%" y="629" width="0.1022%" height="15" fill="rgb(235,228,7)" fg:x="12987734879" fg:w="13291892"/><text x="100.1478%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (2,387,705 samples, 0.02%)</title><rect x="99.9816%" y="613" width="0.0184%" height="15" fill="rgb(245,175,0)" fg:x="12998639066" fg:w="2387705"/><text x="100.2316%" y="623.50"></text></g></svg></svg>